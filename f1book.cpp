// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "f1book.h"

// Dispatch interfaces referenced by this interface
#include "picture.h"
#include "f1rangeref.h"
#include "f1objpos.h"
#include "f1rect.h"
#include "f1replaceresults.h"
#include "f1odbcquery.h"
#include "f1odbcconnect.h"
#include "f1bookview.h"
#include "f1filespec.h"
#include "f1numberformat.h"
#include "f1cellformat.h"

#define IDC_VCF1CTRL 1000

/////////////////////////////////////////////////////////////////////////////
// CF1Book

IMPLEMENT_DYNCREATE(CF1Book, CWnd)

BEGIN_EVENTSINK_MAP(CF1Book, CWnd)
	ON_EVENT(CF1Book, IDC_VCF1CTRL,    1 /* Click    */, OnClickVcf1ctrl1, VTS_I4 VTS_I4)
	ON_EVENT(CF1Book, IDC_VCF1CTRL,    2 /* DblClick */, OnDblClickVcf1ctrl1, VTS_I4 VTS_I4)
	ON_EVENT(CF1Book, IDC_VCF1CTRL,   12 /* RClick   */, OnRClickVcf1ctrl1, VTS_I4 VTS_I4)
	ON_EVENT(CF1Book, IDC_VCF1CTRL, -607 /* MouseUp  */, OnMouseUpVcf1ctrl1, VTS_I2 VTS_I2 VTS_I4 VTS_I4)
END_EVENTSINK_MAP()


//
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    1 /* Click                */, OnClickVcf1ctrl1, VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    2 /* DblClick             */, OnDblClickVcf1ctrl1, VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    3 /* CancelEdit           */, OnCancelEditVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    4 /* SelChange            */, OnSelChangeVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    5 /* StartEdit            */, OnStartEditVcf1ctrl1, VTS_PBSTR VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    6 /* EndEdit              */, OnEndEditVcf1ctrl1, VTS_PBSTR VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    7 /* StartRecalc          */, OnStartRecalcVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    8 /* EndRecalc            */, OnEndRecalcVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,    9 /* TopLeftChanged       */, OnTopLeftChangedVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   10 /* ObjClick             */, OnObjClickVcf1ctrl1, VTS_PBSTR VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   11 /* ObjDblClick          */, OnObjDblClickVcf1ctrl1, VTS_PBSTR VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   12 /* RClick               */, OnRClickVcf1ctrl1, VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   13 /* RDblClick            */, OnRDblClickVcf1ctrl1, VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   14 /* ObjValueChanged      */, OnObjValueChangedVcf1ctrl1, VTS_PBSTR VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   15 /* Modified             */, OnModifiedVcf1ctrl1, VTS_NONE)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   16 /* ObjGotFocus          */, OnObjGotFocusVcf1ctrl1, VTS_PBSTR VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   17 /* ObjLostFocus         */, OnObjLostFocusVcf1ctrl1, VTS_PBSTR VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   18 /* ValidationFailed     */, OnValidationFailedVcf1ctrl1, VTS_PBSTR VTS_I4 VTS_I4 VTS_I4 VTS_PBSTR VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   19 /* Found                */, OnFoundVcf1ctrl1, VTS_I4 VTS_I4 VTS_I4 VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   20 /* BeforeReplace        */, OnBeforeReplaceVcf1ctrl1, VTS_PBSTR VTS_I4 VTS_I4 VTS_I4 VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   21 /* ODBCExecuteError     */, OnODBCExecuteErrorVcf1ctrl1, VTS_I4 VTS_I4 VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   22 /* SafeStartEdit        */, OnSafeStartEditVcf1ctrl1, VTS_PDISPATCH VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   23 /* SafeEndEdit          */, OnSafeEndEditVcf1ctrl1, VTS_PDISPATCH VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   24 /* SafeValidationFailed */, OnSafeValidationFailedVcf1ctrl1, VTS_PDISPATCH VTS_I4 VTS_I4 VTS_I4 VTS_PDISPATCH VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   25 /* SafeFound            */, OnSafeFoundVcf1ctrl1, VTS_I4 VTS_I4 VTS_I4 VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   26 /* SafeBeforeReplace    */, OnSafeBeforeReplaceVcf1ctrl1, VTS_PDISPATCH VTS_I4 VTS_I4 VTS_I4 VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL,   27 /* SafeODBCExecuteError */, OnSafeODBCExecuteErrorVcf1ctrl1, VTS_I4 VTS_I4 VTS_PDISPATCH)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -602 /* KeyDown              */, OnKeyDownVcf1ctrl1, VTS_PI2 VTS_I2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -603 /* KeyPress             */, OnKeyPressVcf1ctrl1, VTS_PI2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -604 /* KeyUp                */, OnKeyUpVcf1ctrl1, VTS_PI2 VTS_I2)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -605 /* MouseDown            */, OnMouseDownVcf1ctrl1, VTS_I2 VTS_I2 VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -606 /* MouseMove            */, OnMouseMoveVcf1ctrl1, VTS_I2 VTS_I2 VTS_I4 VTS_I4)
//	ON_EVENT(CF1Book, IDC_VCF1CTRL, -607 /* MouseUp              */, OnMouseUpVcf1ctrl1, VTS_I2 VTS_I2 VTS_I4 VTS_I4)
//
/////////////////////////////////////////////////////////////////////////////
// CF1Book properties

unsigned long CF1Book::GetBackColor()
{
	unsigned long result;
	GetProperty(0x3, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetBackColor(unsigned long propVal)
{
	SetProperty(0x3, VT_I4, propVal);
}

long CF1Book::GetCol()
{
	long result;
	GetProperty(0x4, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetCol(long propVal)
{
	SetProperty(0x4, VT_I4, propVal);
}

long CF1Book::GetRow()
{
	long result;
	GetProperty(0x5, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetRow(long propVal)
{
	SetProperty(0x5, VT_I4, propVal);
}

long CF1Book::GetShowHScrollBar()
{
	long result;
	GetProperty(0x6, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetShowHScrollBar(long propVal)
{
	SetProperty(0x6, VT_I4, propVal);
}

CString CF1Book::GetText()
{
	CString result;
	GetProperty(0x7, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetText(LPCTSTR propVal)
{
	SetProperty(0x7, VT_BSTR, propVal);
}

double CF1Book::GetNumber()
{
	double result;
	GetProperty(0x8, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetNumber(double propVal)
{
	SetProperty(0x8, VT_R8, propVal);
}

CString CF1Book::GetFormula()
{
	CString result;
	GetProperty(0x9, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetFormula(LPCTSTR propVal)
{
	SetProperty(0x9, VT_BSTR, propVal);
}

long CF1Book::GetFixedCol()
{
	long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFixedCol(long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

long CF1Book::GetFixedCols()
{
	long result;
	GetProperty(0xb, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFixedCols(long propVal)
{
	SetProperty(0xb, VT_I4, propVal);
}

long CF1Book::GetFixedRow()
{
	long result;
	GetProperty(0xc, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFixedRow(long propVal)
{
	SetProperty(0xc, VT_I4, propVal);
}

long CF1Book::GetFixedRows()
{
	long result;
	GetProperty(0xd, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFixedRows(long propVal)
{
	SetProperty(0xd, VT_I4, propVal);
}

BOOL CF1Book::GetShowGridLines()
{
	BOOL result;
	GetProperty(0xe, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowGridLines(BOOL propVal)
{
	SetProperty(0xe, VT_BOOL, propVal);
}

BOOL CF1Book::GetShowRowHeading()
{
	BOOL result;
	GetProperty(0xf, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowRowHeading(BOOL propVal)
{
	SetProperty(0xf, VT_BOOL, propVal);
}

long CF1Book::GetShowSelections()
{
	long result;
	GetProperty(0x10, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetShowSelections(long propVal)
{
	SetProperty(0x10, VT_I4, propVal);
}

long CF1Book::GetLeftCol()
{
	long result;
	GetProperty(0x11, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetLeftCol(long propVal)
{
	SetProperty(0x11, VT_I4, propVal);
}

long CF1Book::GetMaxCol()
{
	long result;
	GetProperty(0x12, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMaxCol(long propVal)
{
	SetProperty(0x12, VT_I4, propVal);
}

long CF1Book::GetMaxRow()
{
	long result;
	GetProperty(0x13, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMaxRow(long propVal)
{
	SetProperty(0x13, VT_I4, propVal);
}

long CF1Book::GetTopRow()
{
	long result;
	GetProperty(0x14, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetTopRow(long propVal)
{
	SetProperty(0x14, VT_I4, propVal);
}

BOOL CF1Book::GetAllowResize()
{
	BOOL result;
	GetProperty(0x15, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowResize(BOOL propVal)
{
	SetProperty(0x15, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowSelections()
{
	BOOL result;
	GetProperty(0x16, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowSelections(BOOL propVal)
{
	SetProperty(0x16, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowFormulas()
{
	BOOL result;
	GetProperty(0x17, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowFormulas(BOOL propVal)
{
	SetProperty(0x17, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowInCellEditing()
{
	BOOL result;
	GetProperty(0x18, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowInCellEditing(BOOL propVal)
{
	SetProperty(0x18, VT_BOOL, propVal);
}

long CF1Book::GetShowVScrollBar()
{
	long result;
	GetProperty(0x19, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetShowVScrollBar(long propVal)
{
	SetProperty(0x19, VT_I4, propVal);
}

BOOL CF1Book::GetAllowFillRange()
{
	BOOL result;
	GetProperty(0x1a, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowFillRange(BOOL propVal)
{
	SetProperty(0x1a, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowMoveRange()
{
	BOOL result;
	GetProperty(0x1b, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowMoveRange(BOOL propVal)
{
	SetProperty(0x1b, VT_BOOL, propVal);
}

long CF1Book::GetSelStartCol()
{
	long result;
	GetProperty(0x1c, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetSelStartCol(long propVal)
{
	SetProperty(0x1c, VT_I4, propVal);
}

long CF1Book::GetSelStartRow()
{
	long result;
	GetProperty(0x1d, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetSelStartRow(long propVal)
{
	SetProperty(0x1d, VT_I4, propVal);
}

long CF1Book::GetSelEndCol()
{
	long result;
	GetProperty(0x1e, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetSelEndCol(long propVal)
{
	SetProperty(0x1e, VT_I4, propVal);
}

long CF1Book::GetSelEndRow()
{
	long result;
	GetProperty(0x1f, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetSelEndRow(long propVal)
{
	SetProperty(0x1f, VT_I4, propVal);
}

unsigned long CF1Book::GetExtraColor()
{
	unsigned long result;
	GetProperty(0x20, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetExtraColor(unsigned long propVal)
{
	SetProperty(0x20, VT_I4, propVal);
}

CString CF1Book::GetFileName()
{
	CString result;
	GetProperty(0x21, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetFileName(LPCTSTR propVal)
{
	SetProperty(0x21, VT_BSTR, propVal);
}

BOOL CF1Book::GetAutoRecalc()
{
	BOOL result;
	GetProperty(0x22, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAutoRecalc(BOOL propVal)
{
	SetProperty(0x22, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintGridLines()
{
	BOOL result;
	GetProperty(0x23, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintGridLines(BOOL propVal)
{
	SetProperty(0x23, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintRowHeading()
{
	BOOL result;
	GetProperty(0x24, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintRowHeading(BOOL propVal)
{
	SetProperty(0x24, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintHCenter()
{
	BOOL result;
	GetProperty(0x25, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintHCenter(BOOL propVal)
{
	SetProperty(0x25, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintVCenter()
{
	BOOL result;
	GetProperty(0x26, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintVCenter(BOOL propVal)
{
	SetProperty(0x26, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintLeftToRight()
{
	BOOL result;
	GetProperty(0x27, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintLeftToRight(BOOL propVal)
{
	SetProperty(0x27, VT_BOOL, propVal);
}

CString CF1Book::GetPrintHeader()
{
	CString result;
	GetProperty(0x28, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetPrintHeader(LPCTSTR propVal)
{
	SetProperty(0x28, VT_BSTR, propVal);
}

CString CF1Book::GetPrintFooter()
{
	CString result;
	GetProperty(0x29, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetPrintFooter(LPCTSTR propVal)
{
	SetProperty(0x29, VT_BSTR, propVal);
}

double CF1Book::GetPrintLeftMargin()
{
	double result;
	GetProperty(0x2a, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintLeftMargin(double propVal)
{
	SetProperty(0x2a, VT_R8, propVal);
}

double CF1Book::GetPrintTopMargin()
{
	double result;
	GetProperty(0x2b, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintTopMargin(double propVal)
{
	SetProperty(0x2b, VT_R8, propVal);
}

double CF1Book::GetPrintRightMargin()
{
	double result;
	GetProperty(0x2c, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintRightMargin(double propVal)
{
	SetProperty(0x2c, VT_R8, propVal);
}

double CF1Book::GetPrintBottomMargin()
{
	double result;
	GetProperty(0x2d, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintBottomMargin(double propVal)
{
	SetProperty(0x2d, VT_R8, propVal);
}

CString CF1Book::GetPrintArea()
{
	CString result;
	GetProperty(0x2e, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetPrintArea(LPCTSTR propVal)
{
	SetProperty(0x2e, VT_BSTR, propVal);
}

CString CF1Book::GetPrintTitles()
{
	CString result;
	GetProperty(0x2f, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetPrintTitles(LPCTSTR propVal)
{
	SetProperty(0x2f, VT_BSTR, propVal);
}

BOOL CF1Book::GetPrintNoColor()
{
	BOOL result;
	GetProperty(0x30, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintNoColor(BOOL propVal)
{
	SetProperty(0x30, VT_BOOL, propVal);
}

CString CF1Book::GetSelection()
{
	CString result;
	GetProperty(0x31, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetSelection(LPCTSTR propVal)
{
	SetProperty(0x31, VT_BSTR, propVal);
}

CString CF1Book::GetTableName()
{
	CString result;
	GetProperty(0x32, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetTableName(LPCTSTR propVal)
{
	SetProperty(0x32, VT_BSTR, propVal);
}

BOOL CF1Book::GetDoCancelEdit()
{
	BOOL result;
	GetProperty(0x33, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoCancelEdit(BOOL propVal)
{
	SetProperty(0x33, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoSelChange()
{
	BOOL result;
	GetProperty(0x34, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoSelChange(BOOL propVal)
{
	SetProperty(0x34, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoStartEdit()
{
	BOOL result;
	GetProperty(0x35, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoStartEdit(BOOL propVal)
{
	SetProperty(0x35, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoEndEdit()
{
	BOOL result;
	GetProperty(0x36, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoEndEdit(BOOL propVal)
{
	SetProperty(0x36, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoStartRecalc()
{
	BOOL result;
	GetProperty(0x37, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoStartRecalc(BOOL propVal)
{
	SetProperty(0x37, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoEndRecalc()
{
	BOOL result;
	GetProperty(0x38, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoEndRecalc(BOOL propVal)
{
	SetProperty(0x38, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoClick()
{
	BOOL result;
	GetProperty(0x39, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoClick(BOOL propVal)
{
	SetProperty(0x39, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoDblClick()
{
	BOOL result;
	GetProperty(0x3a, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoDblClick(BOOL propVal)
{
	SetProperty(0x3a, VT_BOOL, propVal);
}

BOOL CF1Book::GetShowColHeading()
{
	BOOL result;
	GetProperty(0x3b, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowColHeading(BOOL propVal)
{
	SetProperty(0x3b, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrintColHeading()
{
	BOOL result;
	GetProperty(0x3c, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintColHeading(BOOL propVal)
{
	SetProperty(0x3c, VT_BOOL, propVal);
}

CString CF1Book::GetEntry()
{
	CString result;
	GetProperty(0x3d, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetEntry(LPCTSTR propVal)
{
	SetProperty(0x3d, VT_BSTR, propVal);
}

BOOL CF1Book::GetRepaint()
{
	BOOL result;
	GetProperty(0x3e, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetRepaint(BOOL propVal)
{
	SetProperty(0x3e, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowArrows()
{
	BOOL result;
	GetProperty(0x3f, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowArrows(BOOL propVal)
{
	SetProperty(0x3f, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowTabs()
{
	BOOL result;
	GetProperty(0x40, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowTabs(BOOL propVal)
{
	SetProperty(0x40, VT_BOOL, propVal);
}

CString CF1Book::GetFormattedText()
{
	CString result;
	GetProperty(0x41, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetFormattedText(LPCTSTR propVal)
{
	SetProperty(0x41, VT_BSTR, propVal);
}

BOOL CF1Book::GetRowMode()
{
	BOOL result;
	GetProperty(0x42, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetRowMode(BOOL propVal)
{
	SetProperty(0x42, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowDelete()
{
	BOOL result;
	GetProperty(0x43, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowDelete(BOOL propVal)
{
	SetProperty(0x43, VT_BOOL, propVal);
}

BOOL CF1Book::GetEnableProtection()
{
	BOOL result;
	GetProperty(0x44, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetEnableProtection(BOOL propVal)
{
	SetProperty(0x44, VT_BOOL, propVal);
}

long CF1Book::GetMinCol()
{
	long result;
	GetProperty(0x45, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMinCol(long propVal)
{
	SetProperty(0x45, VT_I4, propVal);
}

long CF1Book::GetMinRow()
{
	long result;
	GetProperty(0x46, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMinRow(long propVal)
{
	SetProperty(0x46, VT_I4, propVal);
}

BOOL CF1Book::GetDoTopLeftChanged()
{
	BOOL result;
	GetProperty(0x47, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoTopLeftChanged(BOOL propVal)
{
	SetProperty(0x47, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowEditHeaders()
{
	BOOL result;
	GetProperty(0x48, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowEditHeaders(BOOL propVal)
{
	SetProperty(0x48, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoObjClick()
{
	BOOL result;
	GetProperty(0x49, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoObjClick(BOOL propVal)
{
	SetProperty(0x49, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoObjDblClick()
{
	BOOL result;
	GetProperty(0x4a, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoObjDblClick(BOOL propVal)
{
	SetProperty(0x4a, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowObjSelections()
{
	BOOL result;
	GetProperty(0x4b, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowObjSelections(BOOL propVal)
{
	SetProperty(0x4b, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoRClick()
{
	BOOL result;
	GetProperty(0x4c, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoRClick(BOOL propVal)
{
	SetProperty(0x4c, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoRDblClick()
{
	BOOL result;
	GetProperty(0x4d, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoRDblClick(BOOL propVal)
{
	SetProperty(0x4d, VT_BOOL, propVal);
}

CString CF1Book::GetClip()
{
	CString result;
	GetProperty(0x4e, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetClip(LPCTSTR propVal)
{
	SetProperty(0x4e, VT_BSTR, propVal);
}

CString CF1Book::GetClipValues()
{
	CString result;
	GetProperty(0x4f, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetClipValues(LPCTSTR propVal)
{
	SetProperty(0x4f, VT_BSTR, propVal);
}

BOOL CF1Book::GetPrintLandscape()
{
	BOOL result;
	GetProperty(0x50, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintLandscape(BOOL propVal)
{
	SetProperty(0x50, VT_BOOL, propVal);
}

BOOL CF1Book::GetEnabled()
{
	BOOL result;
	GetProperty(DISPID_ENABLED, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetEnabled(BOOL propVal)
{
	SetProperty(DISPID_ENABLED, VT_BOOL, propVal);
}

short CF1Book::GetBorderStyle()
{
	short result;
	GetProperty(DISPID_BORDERSTYLE, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetBorderStyle(short propVal)
{
	SetProperty(DISPID_BORDERSTYLE, VT_I4, propVal);
}

CString CF1Book::GetAppName()
{
	CString result;
	GetProperty(0x51, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetAppName(LPCTSTR propVal)
{
	SetProperty(0x51, VT_BSTR, propVal);
}

short CF1Book::GetHdrHeight()
{
	short result;
	GetProperty(0x52, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetHdrHeight(short propVal)
{
	SetProperty(0x52, VT_I2, propVal);
}

short CF1Book::GetHdrWidth()
{
	short result;
	GetProperty(0x53, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetHdrWidth(short propVal)
{
	SetProperty(0x53, VT_I2, propVal);
}

CString CF1Book::GetNumberFormat()
{
	CString result;
	GetProperty(0x54, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetNumberFormat(LPCTSTR propVal)
{
	SetProperty(0x54, VT_BSTR, propVal);
}

CString CF1Book::GetTopLeftText()
{
	CString result;
	GetProperty(0x55, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetTopLeftText(LPCTSTR propVal)
{
	SetProperty(0x55, VT_BSTR, propVal);
}

BOOL CF1Book::GetEnterMovesDown()
{
	BOOL result;
	GetProperty(0x56, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetEnterMovesDown(BOOL propVal)
{
	SetProperty(0x56, VT_BOOL, propVal);
}

long CF1Book::GetLastCol()
{
	long result;
	GetProperty(0x57, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetLastCol(long propVal)
{
	SetProperty(0x57, VT_I4, propVal);
}

long CF1Book::GetLastRow()
{
	long result;
	GetProperty(0x58, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetLastRow(long propVal)
{
	SetProperty(0x58, VT_I4, propVal);
}

BOOL CF1Book::GetLogical()
{
	BOOL result;
	GetProperty(0x59, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetLogical(BOOL propVal)
{
	SetProperty(0x59, VT_BOOL, propVal);
}

long CF1Book::GetMode()
{
	long result;
	GetProperty(0x5a, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMode(long propVal)
{
	SetProperty(0x5a, VT_I4, propVal);
}

long CF1Book::GetPolyEditMode()
{
	long result;
	GetProperty(0x5b, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetPolyEditMode(long propVal)
{
	SetProperty(0x5b, VT_I4, propVal);
}

short CF1Book::GetViewScale()
{
	short result;
	GetProperty(0x5c, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetViewScale(short propVal)
{
	SetProperty(0x5c, VT_I2, propVal);
}

short CF1Book::GetSelectionCount()
{
	short result;
	GetProperty(0x5d, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetSelectionCount(short propVal)
{
	SetProperty(0x5d, VT_I2, propVal);
}

CString CF1Book::GetTitle()
{
	CString result;
	GetProperty(0x5e, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetTitle(LPCTSTR propVal)
{
	SetProperty(0x5e, VT_BSTR, propVal);
}

short CF1Book::GetType()
{
	short result;
	GetProperty(0x5f, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetType(short propVal)
{
	SetProperty(0x5f, VT_I2, propVal);
}

BOOL CF1Book::GetShowFormulas()
{
	BOOL result;
	GetProperty(0x60, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowFormulas(BOOL propVal)
{
	SetProperty(0x60, VT_BOOL, propVal);
}

BOOL CF1Book::GetShowZeroValues()
{
	BOOL result;
	GetProperty(0x61, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowZeroValues(BOOL propVal)
{
	SetProperty(0x61, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoObjValueChanged()
{
	BOOL result;
	GetProperty(0x63, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoObjValueChanged(BOOL propVal)
{
	SetProperty(0x63, VT_BOOL, propVal);
}

BOOL CF1Book::GetScrollToLastRC()
{
	BOOL result;
	GetProperty(0x64, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetScrollToLastRC(BOOL propVal)
{
	SetProperty(0x64, VT_BOOL, propVal);
}

BOOL CF1Book::GetModified()
{
	BOOL result;
	GetProperty(0x65, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetModified(BOOL propVal)
{
	SetProperty(0x65, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoObjGotFocus()
{
	BOOL result;
	GetProperty(0x66, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoObjGotFocus(BOOL propVal)
{
	SetProperty(0x66, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoObjLostFocus()
{
	BOOL result;
	GetProperty(0x67, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoObjLostFocus(BOOL propVal)
{
	SetProperty(0x67, VT_BOOL, propVal);
}

long CF1Book::GetPrintDevMode()
{
	long result;
	GetProperty(0x68, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetPrintDevMode(long propVal)
{
	SetProperty(0x68, VT_I4, propVal);
}

long CF1Book::GetNumSheets()
{
	long result;
	GetProperty(0x69, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetNumSheets(long propVal)
{
	SetProperty(0x69, VT_I4, propVal);
}

long CF1Book::GetSheet()
{
	long result;
	GetProperty(0x6a, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetSheet(long propVal)
{
	SetProperty(0x6a, VT_I4, propVal);
}

long CF1Book::GetColWidthUnits()
{
	long result;
	GetProperty(0x6b, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetColWidthUnits(long propVal)
{
	SetProperty(0x6b, VT_I4, propVal);
}

BOOL CF1Book::GetShowTypeMarkers()
{
	BOOL result;
	GetProperty(0x6c, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowTypeMarkers(BOOL propVal)
{
	SetProperty(0x6c, VT_BOOL, propVal);
}

long CF1Book::GetShowTabs()
{
	long result;
	GetProperty(0x6d, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetShowTabs(long propVal)
{
	SetProperty(0x6d, VT_I4, propVal);
}

BOOL CF1Book::GetShowEditBar()
{
	BOOL result;
	GetProperty(0x6e, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowEditBar(BOOL propVal)
{
	SetProperty(0x6e, VT_BOOL, propVal);
}

BOOL CF1Book::GetShowEditBarCellRef()
{
	BOOL result;
	GetProperty(0x6f, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetShowEditBarCellRef(BOOL propVal)
{
	SetProperty(0x6f, VT_BOOL, propVal);
}

BOOL CF1Book::GetAllowDesigner()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowDesigner(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

OLE_HANDLE CF1Book::GetHWnd()
{
	OLE_HANDLE result;
	GetProperty(DISPID_HWND, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetHWnd(OLE_HANDLE propVal)
{
	SetProperty(DISPID_HWND, VT_I4, propVal);
}

BOOL CF1Book::GetAllowAutoFill()
{
	BOOL result;
	GetProperty(0x70, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetAllowAutoFill(BOOL propVal)
{
	SetProperty(0x70, VT_BOOL, propVal);
}

BOOL CF1Book::GetCompressed()
{
	BOOL result;
	GetProperty(0x12b, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetCompressed(BOOL propVal)
{
	SetProperty(0x12b, VT_BOOL, propVal);
}

CString CF1Book::GetFontName()
{
	CString result;
	GetProperty(0x514, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetFontName(LPCTSTR propVal)
{
	SetProperty(0x514, VT_BSTR, propVal);
}

short CF1Book::GetFontSize()
{
	short result;
	GetProperty(0x515, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetFontSize(short propVal)
{
	SetProperty(0x515, VT_I2, propVal);
}

BOOL CF1Book::GetFontBold()
{
	BOOL result;
	GetProperty(0x516, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetFontBold(BOOL propVal)
{
	SetProperty(0x516, VT_BOOL, propVal);
}

BOOL CF1Book::GetFontItalic()
{
	BOOL result;
	GetProperty(0x517, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetFontItalic(BOOL propVal)
{
	SetProperty(0x517, VT_BOOL, propVal);
}

BOOL CF1Book::GetFontUnderline()
{
	BOOL result;
	GetProperty(0x518, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetFontUnderline(BOOL propVal)
{
	SetProperty(0x518, VT_BOOL, propVal);
}

BOOL CF1Book::GetFontStrikeout()
{
	BOOL result;
	GetProperty(0x519, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetFontStrikeout(BOOL propVal)
{
	SetProperty(0x519, VT_BOOL, propVal);
}

unsigned long CF1Book::GetFontColor()
{
	unsigned long result;
	GetProperty(0x51a, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFontColor(unsigned long propVal)
{
	SetProperty(0x51a, VT_I4, propVal);
}

long CF1Book::GetFontCharSet()
{
	long result;
	GetProperty(0x599, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetFontCharSet(long propVal)
{
	SetProperty(0x599, VT_I4, propVal);
}

long CF1Book::GetHAlign()
{
	long result;
	GetProperty(0x51b, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetHAlign(long propVal)
{
	SetProperty(0x51b, VT_I4, propVal);
}

BOOL CF1Book::GetWordWrap()
{
	BOOL result;
	GetProperty(0x51c, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetWordWrap(BOOL propVal)
{
	SetProperty(0x51c, VT_BOOL, propVal);
}

long CF1Book::GetVAlign()
{
	long result;
	GetProperty(0x51d, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetVAlign(long propVal)
{
	SetProperty(0x51d, VT_I4, propVal);
}

BOOL CF1Book::GetLaunchWorkbookDesigner()
{
	BOOL result;
	GetProperty(0x51e, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetLaunchWorkbookDesigner(BOOL propVal)
{
	SetProperty(0x51e, VT_BOOL, propVal);
}

double CF1Book::GetPrintHeaderMargin()
{
	double result;
	GetProperty(0x51f, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintHeaderMargin(double propVal)
{
	SetProperty(0x51f, VT_R8, propVal);
}

double CF1Book::GetPrintFooterMargin()
{
	double result;
	GetProperty(0x520, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetPrintFooterMargin(double propVal)
{
	SetProperty(0x520, VT_R8, propVal);
}

CString CF1Book::GetFormulaLocal()
{
	CString result;
	GetProperty(0x52e, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetFormulaLocal(LPCTSTR propVal)
{
	SetProperty(0x52e, VT_BSTR, propVal);
}

CString CF1Book::GetNumberFormatLocal()
{
	CString result;
	GetProperty(0x532, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetNumberFormatLocal(LPCTSTR propVal)
{
	SetProperty(0x532, VT_BSTR, propVal);
}

CString CF1Book::GetSelectionLocal()
{
	CString result;
	GetProperty(0x533, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetSelectionLocal(LPCTSTR propVal)
{
	SetProperty(0x533, VT_BSTR, propVal);
}

CString CF1Book::GetDataTransferRange()
{
	CString result;
	GetProperty(0x536, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetDataTransferRange(LPCTSTR propVal)
{
	SetProperty(0x536, VT_BSTR, propVal);
}

BOOL CF1Book::GetCanEditPaste()
{
	BOOL result;
	GetProperty(0x540, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetCanEditPaste(BOOL propVal)
{
	SetProperty(0x540, VT_BOOL, propVal);
}

short CF1Book::GetObjPatternStyle()
{
	short result;
	GetProperty(0x54a, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetObjPatternStyle(short propVal)
{
	SetProperty(0x54a, VT_I2, propVal);
}

unsigned long CF1Book::GetObjPatternFG()
{
	unsigned long result;
	GetProperty(0x54b, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetObjPatternFG(unsigned long propVal)
{
	SetProperty(0x54b, VT_I4, propVal);
}

unsigned long CF1Book::GetObjPatternBG()
{
	unsigned long result;
	GetProperty(0x54c, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetObjPatternBG(unsigned long propVal)
{
	SetProperty(0x54c, VT_I4, propVal);
}

CString CF1Book::GetDefaultFontName()
{
	CString result;
	GetProperty(0x551, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetDefaultFontName(LPCTSTR propVal)
{
	SetProperty(0x551, VT_BSTR, propVal);
}

short CF1Book::GetDefaultFontSize()
{
	short result;
	GetProperty(0x552, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetDefaultFontSize(short propVal)
{
	SetProperty(0x552, VT_I2, propVal);
}

BOOL CF1Book::GetSelHdrRow()
{
	BOOL result;
	GetProperty(0x553, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetSelHdrRow(BOOL propVal)
{
	SetProperty(0x553, VT_BOOL, propVal);
}

BOOL CF1Book::GetSelHdrCol()
{
	BOOL result;
	GetProperty(0x554, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetSelHdrCol(BOOL propVal)
{
	SetProperty(0x554, VT_BOOL, propVal);
}

BOOL CF1Book::GetSelHdrTopLeft()
{
	BOOL result;
	GetProperty(0x555, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetSelHdrTopLeft(BOOL propVal)
{
	SetProperty(0x555, VT_BOOL, propVal);
}

BOOL CF1Book::GetIterationEnabled()
{
	BOOL result;
	GetProperty(0x556, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetIterationEnabled(BOOL propVal)
{
	SetProperty(0x556, VT_BOOL, propVal);
}

short CF1Book::GetIterationMax()
{
	short result;
	GetProperty(0x557, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetIterationMax(short propVal)
{
	SetProperty(0x557, VT_I2, propVal);
}

double CF1Book::GetIterationMaxChange()
{
	double result;
	GetProperty(0x558, VT_R8, (void*)&result);
	return result;
}

void CF1Book::SetIterationMaxChange(double propVal)
{
	SetProperty(0x558, VT_R8, propVal);
}

short CF1Book::GetPrintScale()
{
	short result;
	GetProperty(0x56d, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetPrintScale(short propVal)
{
	SetProperty(0x56d, VT_I2, propVal);
}

BOOL CF1Book::GetPrintScaleFitToPage()
{
	BOOL result;
	GetProperty(0x56e, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrintScaleFitToPage(BOOL propVal)
{
	SetProperty(0x56e, VT_BOOL, propVal);
}

long CF1Book::GetPrintScaleFitVPages()
{
	long result;
	GetProperty(0x570, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetPrintScaleFitVPages(long propVal)
{
	SetProperty(0x570, VT_I4, propVal);
}

long CF1Book::GetPrintScaleFitHPages()
{
	long result;
	GetProperty(0x56f, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetPrintScaleFitHPages(long propVal)
{
	SetProperty(0x56f, VT_I4, propVal);
}

short CF1Book::GetLineStyle()
{
	short result;
	GetProperty(0x573, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetLineStyle(short propVal)
{
	SetProperty(0x573, VT_I2, propVal);
}

unsigned long CF1Book::GetLineColor()
{
	unsigned long result;
	GetProperty(0x574, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetLineColor(unsigned long propVal)
{
	SetProperty(0x574, VT_I4, propVal);
}

short CF1Book::GetLineWeight()
{
	short result;
	GetProperty(0x575, VT_I2, (void*)&result);
	return result;
}

void CF1Book::SetLineWeight(short propVal)
{
	SetProperty(0x575, VT_I2, propVal);
}

CString CF1Book::GetODBCSQLState()
{
	CString result;
	GetProperty(0x57b, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetODBCSQLState(LPCTSTR propVal)
{
	SetProperty(0x57b, VT_BSTR, propVal);
}

long CF1Book::GetODBCNativeError()
{
	long result;
	GetProperty(0x57c, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetODBCNativeError(long propVal)
{
	SetProperty(0x57c, VT_I4, propVal);
}

CString CF1Book::GetODBCErrorMsg()
{
	CString result;
	GetProperty(0x57d, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetODBCErrorMsg(LPCTSTR propVal)
{
	SetProperty(0x57d, VT_BSTR, propVal);
}

BOOL CF1Book::GetDataTransferHeadings()
{
	BOOL result;
	GetProperty(0x585, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDataTransferHeadings(BOOL propVal)
{
	SetProperty(0x585, VT_BOOL, propVal);
}

BOOL CF1Book::GetFormatPaintMode()
{
	BOOL result;
	GetProperty(0x58c, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetFormatPaintMode(BOOL propVal)
{
	SetProperty(0x58c, VT_BOOL, propVal);
}

BOOL CF1Book::GetCanEditPasteSpecial()
{
	BOOL result;
	GetProperty(0x58d, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetCanEditPasteSpecial(BOOL propVal)
{
	SetProperty(0x58d, VT_BOOL, propVal);
}

BOOL CF1Book::GetPrecisionAsDisplayed()
{
	BOOL result;
	GetProperty(0x593, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetPrecisionAsDisplayed(BOOL propVal)
{
	SetProperty(0x593, VT_BOOL, propVal);
}

BOOL CF1Book::GetDoSafeEvents()
{
	BOOL result;
	GetProperty(0x596, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetDoSafeEvents(BOOL propVal)
{
	SetProperty(0x596, VT_BOOL, propVal);
}

long CF1Book::GetDefaultFontCharSet()
{
	long result;
	GetProperty(0x59c, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetDefaultFontCharSet(long propVal)
{
	SetProperty(0x59c, VT_I4, propVal);
}

BOOL CF1Book::GetWantAllWindowInfoChanges()
{
	BOOL result;
	GetProperty(0x5a0, VT_BOOL, (void*)&result);
	return result;
}

void CF1Book::SetWantAllWindowInfoChanges(BOOL propVal)
{
	SetProperty(0x5a0, VT_BOOL, propVal);
}

CString CF1Book::GetUrl()
{
	CString result;
	GetProperty(0x5a1, VT_BSTR, (void*)&result);
	return result;
}

void CF1Book::SetUrl(LPCTSTR propVal)
{
	SetProperty(0x5a1, VT_BSTR, propVal);
}

long CF1Book::GetMousePointer()
{
	long result;
	GetProperty(0xfffffdf7, VT_I4, (void*)&result);
	return result;
}

void CF1Book::SetMousePointer(long propVal)
{
	SetProperty(0xfffffdf7, VT_I4, propVal);
}

CPicture1 CF1Book::GetMouseIcon()
{
	LPDISPATCH pDispatch;
	GetProperty(0xfffffdf6, VT_DISPATCH, (void*)&pDispatch);
	return CPicture1(pDispatch);
}

void CF1Book::SetMouseIcon(LPDISPATCH propVal)
{
	SetProperty(0xfffffdf6, VT_DISPATCH, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CF1Book operations

double CF1Book::GetNumberRC(long nRow, long nCol)
{
	double result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x117, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetNumberRC(long nRow, long nCol, double newValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_R8;
	InvokeHelper(0x117, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, newValue);
}

void CF1Book::FormatCellsDlg(long Pages)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x546, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Pages);
}

CString CF1Book::GetColText(long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x110, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nCol);
	return result;
}

void CF1Book::SetColText(long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x110, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nCol, lpszNewValue);
}

CString CF1Book::GetDefinedName(LPCTSTR Name)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x111, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		Name);
	return result;
}

void CF1Book::SetDefinedName(LPCTSTR Name, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x111, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 Name, lpszNewValue);
}

CString CF1Book::GetEntryRC(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x112, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetEntryRC(long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x112, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, lpszNewValue);
}

CString CF1Book::GetFormattedTextRC(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x113, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

CString CF1Book::GetFormulaRC(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x114, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetFormulaRC(long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x114, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, lpszNewValue);
}

long CF1Book::GetLastColForRow(long nRow)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x115, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		nRow);
	return result;
}

BOOL CF1Book::GetLogicalRC(long nRow, long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x116, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetLogicalRC(long nRow, long nCol, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x116, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, bNewValue);
}

CString CF1Book::GetRowText(long nRow)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x118, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow);
	return result;
}

void CF1Book::SetRowText(long nRow, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x118, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, lpszNewValue);
}

CString CF1Book::GetTextRC(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x119, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetTextRC(long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x119, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, lpszNewValue);
}

short CF1Book::GetTypeRC(long nRow, long nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x11a, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		nRow, nCol);
	return result;
}

long CF1Book::GetObjCellType(long ObjID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x559, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjCellType(long ObjID, long nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x559, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, nNewValue);
}

long CF1Book::GetObjCellRow(long ObjID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x55a, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjCellRow(long ObjID, long nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x55a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, nNewValue);
}

long CF1Book::GetObjCellCol(long ObjID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x55b, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjCellCol(long ObjID, long nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x55b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, nNewValue);
}

long CF1Book::GetObjSelection(short nSelection)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x55c, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		nSelection);
	return result;
}

void CF1Book::EditPasteValues()
{
	InvokeHelper(0x71, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::GetAlignment(short* pHorizontal, BOOL* pWordWrap, short* pVertical, short* pOrientation)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PBOOL VTS_PI2 VTS_PI2;
	InvokeHelper(0x72, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pHorizontal, pWordWrap, pVertical, pOrientation);
}

void CF1Book::GetBorder(short* pLeft, short* pRight, short* pTop, short* pBottom, short* pShade, long* pcrLeft, long* pcrRight, long* pcrTop, long* pcrBottom)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI2 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0x73, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pLeft, pRight, pTop, pBottom, pShade, pcrLeft, pcrRight, pcrTop, pcrBottom);
}

void CF1Book::GetFont(BSTR* pName, short* pSize, BOOL* pBold, BOOL* pItalic, BOOL* pUnderline, BOOL* pStrikeout, long* pcrColor, BOOL* pOutline, BOOL* pShadow)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PI2 VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PI4 VTS_PBOOL VTS_PBOOL;
	InvokeHelper(0x74, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pName, pSize, pBold, pItalic, pUnderline, pStrikeout, pcrColor, pOutline, pShadow);
}

void CF1Book::GetLineStyle(short* pStyle, long* pcrColor, short* pWeight)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PI4 VTS_PI2;
	InvokeHelper(0x75, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pStyle, pcrColor, pWeight);
}

void CF1Book::GetPattern(short* pPattern, long* pcrFG, long* pcrBG)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PI4 VTS_PI4;
	InvokeHelper(0x76, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pPattern, pcrFG, pcrBG);
}

void CF1Book::GetProtection(BOOL* pLocked, BOOL* pHidden)
{
	static BYTE parms[] =
		VTS_PBOOL VTS_PBOOL;
	InvokeHelper(0x77, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pLocked, pHidden);
}

void CF1Book::GetTabbedText(long nR1, long nC1, long nR2, long nC2, BOOL bValuesOnly, long* phText)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_PI4;
	InvokeHelper(0x78, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nR1, nC1, nR2, nC2, bValuesOnly, phText);
}

void CF1Book::SetTabbedText(long nStartRow, long nStartCol, long* pRows, long* pCols, BOOL bValuesOnly, LPCTSTR pText)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_BOOL VTS_BSTR;
	InvokeHelper(0x79, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nStartRow, nStartCol, pRows, pCols, bValuesOnly, pText);
}

void CF1Book::AddColPageBreak(long nCol)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol);
}

void CF1Book::AddPageBreak()
{
	InvokeHelper(0x7b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::AddRowPageBreak(long nRow)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow);
}

void CF1Book::AddSelection(long nRow1, long nCol1, long nRow2, long nCol2)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x7d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2);
}

void CF1Book::Attach(LPCTSTR Title)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x7e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Title);
}

void CF1Book::AttachToSS(long hSrcSS)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x7f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hSrcSS);
}

void CF1Book::CalculationDlg()
{
	InvokeHelper(0x80, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::CancelEdit()
{
	InvokeHelper(0x81, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::CheckRecalc()
{
	InvokeHelper(0x82, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ClearClipboard()
{
	InvokeHelper(0x83, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ClearRange(long nRow1, long nCol1, long nRow2, long nCol2, long ClearType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x84, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, ClearType);
}

void CF1Book::ColorPaletteDlg()
{
	InvokeHelper(0x85, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ColWidthDlg()
{
	InvokeHelper(0x86, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::CopyAll(long hSrcSS)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x87, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hSrcSS);
}

void CF1Book::CopyRange(long nDstR1, long nDstC1, long nDstR2, long nDstC2, long hSrcSS, long nSrcR1, long nSrcC1, long nSrcR2, long nSrcC2)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x88, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nDstR1, nDstC1, nDstR2, nDstC2, hSrcSS, nSrcR1, nSrcC1, nSrcR2, nSrcC2);
}

void CF1Book::DefinedNameDlg()
{
	InvokeHelper(0x89, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::DeleteDefinedName(LPCTSTR pName)
{
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x8a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pName);
}

void CF1Book::DeleteRange(long nRow1, long nCol1, long nRow2, long nCol2, long ShiftType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x8b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, ShiftType);
}

void CF1Book::Draw(long hDC, long x, long y, long cx, long cy, long nRow, long nCol, long* pRows, long* pCols, long nFixedRow, long nFixedCol, long nFixedRows, long nFixedCols)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x8c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hDC, x, y, cx, cy, nRow, nCol, pRows, pCols, nFixedRow, nFixedCol, nFixedRows, nFixedCols);
}

void CF1Book::EditClear(long ClearType)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x8d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ClearType);
}

void CF1Book::EditCopy()
{
	InvokeHelper(0x8e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EditCopyDown()
{
	InvokeHelper(0x8f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EditCopyRight()
{
	InvokeHelper(0x90, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EditCut()
{
	InvokeHelper(0x91, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EditDelete(long ShiftType)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x92, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ShiftType);
}

void CF1Book::EditInsert(long InsertType)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x93, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 InsertType);
}

void CF1Book::EditPaste()
{
	InvokeHelper(0x94, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EndEdit()
{
	InvokeHelper(0x95, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FilePageSetupDlg()
{
	InvokeHelper(0x96, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FilePrint(BOOL bShowPrintDlg)
{
	static BYTE parms[] =
		VTS_BOOL;
	InvokeHelper(0x97, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bShowPrintDlg);
}

void CF1Book::FilePrintSetupDlg()
{
	InvokeHelper(0x98, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatAlignmentDlg()
{
	InvokeHelper(0x99, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatBorderDlg()
{
	InvokeHelper(0x9a, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatCurrency0()
{
	InvokeHelper(0x9b, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatCurrency2()
{
	InvokeHelper(0x9c, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatDefaultFontDlg()
{
	InvokeHelper(0x9d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatFixed()
{
	InvokeHelper(0x9e, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatFixed2()
{
	InvokeHelper(0x9f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatFontDlg()
{
	InvokeHelper(0xa0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatFraction()
{
	InvokeHelper(0xa1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatGeneral()
{
	InvokeHelper(0xa2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatHmmampm()
{
	InvokeHelper(0xa3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatMdyy()
{
	InvokeHelper(0xa4, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatNumberDlg()
{
	InvokeHelper(0xa5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatPatternDlg()
{
	InvokeHelper(0xa6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatPercent()
{
	InvokeHelper(0xa7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatScientific()
{
	InvokeHelper(0xa8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::GetActiveCell(long* pRow, long* pCol)
{
	static BYTE parms[] =
		VTS_PI4 VTS_PI4;
	InvokeHelper(0xa9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pRow, pCol);
}

short CF1Book::GetColWidth(long nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11b, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		nCol);
	return result;
}

void CF1Book::SetColWidth(long nCol, short nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x11b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nCol, nNewValue);
}

short CF1Book::GetRowHeight(long nRow)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11c, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		nRow);
	return result;
}

void CF1Book::SetRowHeight(long nRow, short nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x11c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nNewValue);
}

void CF1Book::GetDefaultFont(BSTR* pBuf, short* pSize)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PI2;
	InvokeHelper(0xaa, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pBuf, pSize);
}

void CF1Book::GetHdrSelection(BOOL* pTopLeftHdr, BOOL* pRowHdr, BOOL* pColHdr)
{
	static BYTE parms[] =
		VTS_PBOOL VTS_PBOOL VTS_PBOOL;
	InvokeHelper(0xab, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pTopLeftHdr, pRowHdr, pColHdr);
}

void CF1Book::GetIteration(BOOL* pIteration, short* pMaxIterations, double* pMaxChange)
{
	static BYTE parms[] =
		VTS_PBOOL VTS_PI2 VTS_PR8;
	InvokeHelper(0xac, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pIteration, pMaxIterations, pMaxChange);
}

void CF1Book::GetPrintScale(short* pScale, BOOL* pFitToPage, long* pVPages, long* pHPages)
{
	static BYTE parms[] =
		VTS_PI2 VTS_PBOOL VTS_PI4 VTS_PI4;
	InvokeHelper(0xad, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pScale, pFitToPage, pVPages, pHPages);
}

void CF1Book::GetSelection(short nSelection, long* pR1, long* pC1, long* pR2, long* pC2)
{
	static BYTE parms[] =
		VTS_I2 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4;
	InvokeHelper(0xae, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSelection, pR1, pC1, pR2, pC2);
}

void CF1Book::GotoDlg()
{
	InvokeHelper(0xaf, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::HeapMin()
{
	InvokeHelper(0xb0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::InitTable()
{
	InvokeHelper(0xb1, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::InsertRange(long nRow1, long nCol1, long nRow2, long nCol2, long InsertType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xb2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, InsertType);
}

void CF1Book::LineStyleDlg()
{
	InvokeHelper(0xb3, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::MoveRange(long nRow1, long nCol1, long nRow2, long nCol2, long nRowOffset, long nColOffset)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xb4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, nRowOffset, nColOffset);
}

void CF1Book::ObjAddItem(long ObjID, LPCTSTR ItemText)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0xb5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, ItemText);
}

void CF1Book::ObjAddSelection(long ObjID)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xb6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID);
}

void CF1Book::ObjBringToFront()
{
	InvokeHelper(0xb7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ObjDeleteItem(long ObjID, short nItem)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0xb8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, nItem);
}

void CF1Book::ObjGetCell(long ObjID, short* pControlCellType, long* pRow, long* pCol)
{
	static BYTE parms[] =
		VTS_I4 VTS_PI2 VTS_PI4 VTS_PI4;
	InvokeHelper(0xb9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, pControlCellType, pRow, pCol);
}

void CF1Book::ObjGetPos(long ObjID, float* pX1, float* pY1, float* pX2, float* pY2)
{
	static BYTE parms[] =
		VTS_I4 VTS_PR4 VTS_PR4 VTS_PR4 VTS_PR4;
	InvokeHelper(0xba, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, pX1, pY1, pX2, pY2);
}

void CF1Book::ObjGetSelection(short nSelection, long* pID)
{
	static BYTE parms[] =
		VTS_I2 VTS_PI4;
	InvokeHelper(0xbb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSelection, pID);
}

void CF1Book::ObjInsertItem(long ObjID, short nItem, LPCTSTR ItemText)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0xbc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, nItem, ItemText);
}

void CF1Book::ObjNameDlg()
{
	InvokeHelper(0xbd, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ObjNew(short ObjType, float nX1, float nY1, float nX2, float nY2, long* pID)
{
	static BYTE parms[] =
		VTS_I2 VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_PI4;
	InvokeHelper(0xbe, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjType, nX1, nY1, nX2, nY2, pID);
}

void CF1Book::ObjNewPicture(float nX1, float nY1, float nX2, float nY2, long* pID, long hMF, long nMapMode, long nWndExtentX, long nWndExtentY)
{
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_PI4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xbf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nX1, nY1, nX2, nY2, pID, hMF, nMapMode, nWndExtentX, nWndExtentY);
}

void CF1Book::ObjOptionsDlg()
{
	InvokeHelper(0xc0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ObjPosToTwips(float nX1, float nY1, float nX2, float nY2, long* pX, long* pY, long* pCX, long* pCY, short* pShown)
{
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI2;
	InvokeHelper(0xc1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nX1, nY1, nX2, nY2, pX, pY, pCX, pCY, pShown);
}

void CF1Book::ObjSendToBack()
{
	InvokeHelper(0xc2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ObjSetCell(long ObjID, short CellType, long nRow, long nCol)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_I4 VTS_I4;
	InvokeHelper(0xc3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, CellType, nRow, nCol);
}

void CF1Book::ObjSetPicture(long ObjID, long hMF, short nMapMode, long nWndExtentX, long nWndExtentY)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_I4 VTS_I4;
	InvokeHelper(0xc4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, hMF, nMapMode, nWndExtentX, nWndExtentY);
}

void CF1Book::ObjSetPos(long ObjID, float nX1, float nY1, float nX2, float nY2)
{
	static BYTE parms[] =
		VTS_I4 VTS_R4 VTS_R4 VTS_R4 VTS_R4;
	InvokeHelper(0xc5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID, nX1, nY1, nX2, nY2);
}

void CF1Book::ObjSetSelection(long ObjID)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xc6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 ObjID);
}

void CF1Book::OpenFileDlg(LPCTSTR pTitle, long hWndParent, BSTR* pBuf)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_PBSTR;
	InvokeHelper(0xc7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pTitle, hWndParent, pBuf);
}

void CF1Book::ProtectionDlg()
{
	InvokeHelper(0xc8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::RangeToTwips(long nRow1, long nCol1, long nRow2, long nCol2, long* pX, long* pY, long* pCX, long* pCY, short* pShown)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI4 VTS_PI2;
	InvokeHelper(0xc9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, pX, pY, pCX, pCY, pShown);
}

void CF1Book::Read(LPCTSTR pPathName, short* pFileType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PI2;
	InvokeHelper(0xca, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pPathName, pFileType);
}

void CF1Book::ReadFromBlob(long hBlob, short nReservedBytes)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0xcb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hBlob, nReservedBytes);
}

void CF1Book::Recalc()
{
	InvokeHelper(0xcc, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::RemoveColPageBreak(long nCol)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol);
}

void CF1Book::RemovePageBreak()
{
	InvokeHelper(0xce, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::RemoveRowPageBreak(long nRow)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xcf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow);
}

void CF1Book::RowHeightDlg()
{
	InvokeHelper(0xd0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::SaveFileDlg(LPCTSTR pTitle, BSTR* pBuf, short* pFileType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PBSTR VTS_PI2;
	InvokeHelper(0xd1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pTitle, pBuf, pFileType);
}

void CF1Book::SaveWindowInfo()
{
	InvokeHelper(0xd2, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::SetActiveCell(long nRow, long nCol)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xd3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow, nCol);
}

void CF1Book::SetAlignment(short HAlign, BOOL bWordWrap, short VAlign, short nOrientation)
{
	static BYTE parms[] =
		VTS_I2 VTS_BOOL VTS_I2 VTS_I2;
	InvokeHelper(0xd4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 HAlign, bWordWrap, VAlign, nOrientation);
}

void CF1Book::SetBorder(short nOutline, short nLeft, short nRight, short nTop, short nBottom, short nShade, unsigned long crOutline, unsigned long crLeft, unsigned long crRight, unsigned long crTop, unsigned long crBottom)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xd5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nOutline, nLeft, nRight, nTop, nBottom, nShade, crOutline, crLeft, crRight, crTop, crBottom);
}

void CF1Book::SetColWidth(long nCol1, long nCol2, short nWidth, BOOL bDefColWidth)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_BOOL;
	InvokeHelper(0xd6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol1, nCol2, nWidth, bDefColWidth);
}

void CF1Book::SetColWidthAuto(long nRow1, long nCol1, long nRow2, long nCol2, BOOL bSetDefaults)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xd7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, bSetDefaults);
}

void CF1Book::SetDefaultFont(LPCTSTR Name, short nSize)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0xd8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Name, nSize);
}

void CF1Book::SetFont(LPCTSTR pName, short nSize, BOOL bBold, BOOL bItalic, BOOL bUnderline, BOOL bStrikeout, unsigned long crColor, BOOL bOutline, BOOL bShadow)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I4 VTS_BOOL VTS_BOOL;
	InvokeHelper(0xd9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pName, nSize, bBold, bItalic, bUnderline, bStrikeout, crColor, bOutline, bShadow);
}

void CF1Book::SetHdrSelection(BOOL bTopLeftHdr, BOOL bRowHdr, BOOL bColHdr)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0xda, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bTopLeftHdr, bRowHdr, bColHdr);
}

void CF1Book::SetIteration(BOOL bIteration, short nMaxIterations, double nMaxChange)
{
	static BYTE parms[] =
		VTS_BOOL VTS_I2 VTS_R8;
	InvokeHelper(0xdb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bIteration, nMaxIterations, nMaxChange);
}

void CF1Book::SetLineStyle(short nStyle, unsigned long crColor, short nWeight)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_I2;
	InvokeHelper(0xdc, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nStyle, crColor, nWeight);
}

void CF1Book::SetPattern(short nPattern, unsigned long crFG, unsigned long crBG)
{
	static BYTE parms[] =
		VTS_I2 VTS_I4 VTS_I4;
	InvokeHelper(0xdd, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nPattern, crFG, crBG);
}

void CF1Book::SetPrintAreaFromSelection()
{
	InvokeHelper(0xde, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::SetPrintScale(short nScale, BOOL bFitToPage, short nVPages, short nHPages)
{
	static BYTE parms[] =
		VTS_I2 VTS_BOOL VTS_I2 VTS_I2;
	InvokeHelper(0xdf, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nScale, bFitToPage, nVPages, nHPages);
}

void CF1Book::SetPrintTitlesFromSelection()
{
	InvokeHelper(0xe0, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::SetProtection(BOOL bLocked, BOOL bHidden)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0xe1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bLocked, bHidden);
}

void CF1Book::SetRowHeight(long nRow1, long nRow2, short nHeight, BOOL bDefRowHeight)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_BOOL;
	InvokeHelper(0xe2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nRow2, nHeight, bDefRowHeight);
}

void CF1Book::SetRowHeightAuto(long nRow1, long nCol1, long nRow2, long nCol2, BOOL bSetDefaults)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xe3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, bSetDefaults);
}

void CF1Book::SetSelection(long nRow1, long nCol1, long nRow2, long nCol2)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2);
}

void CF1Book::ShowActiveCell()
{
	InvokeHelper(0xe5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::Sort3(long nRow1, long nCol1, long nRow2, long nCol2, BOOL bSortByRows, long nKey1, long nKey2, long nKey3)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0xe6, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nCol1, nRow2, nCol2, bSortByRows, nKey1, nKey2, nKey3);
}

void CF1Book::SortDlg()
{
	InvokeHelper(0xe7, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::StartEdit(BOOL bClear, BOOL bInCellEditFocus, BOOL bArrowsExitEditMode)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL VTS_BOOL;
	InvokeHelper(0xe8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bClear, bInCellEditFocus, bArrowsExitEditMode);
}

void CF1Book::SwapTables(long hSS2)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xe9, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hSS2);
}

void CF1Book::TransactCommit()
{
	InvokeHelper(0xea, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::TransactRollback()
{
	InvokeHelper(0xeb, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::TransactStart()
{
	InvokeHelper(0xec, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::TwipsToRC(long x, long y, long* pRow, long* pCol)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI4 VTS_PI4;
	InvokeHelper(0xed, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 x, y, pRow, pCol);
}

void CF1Book::SSUpdate()
{
	InvokeHelper(0xee, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

short CF1Book::SSVersion()
{
	short result;
	InvokeHelper(0xef, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CF1Book::Write(LPCTSTR PathName, short FileType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I2;
	InvokeHelper(0xf0, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PathName, FileType);
}

void CF1Book::WriteToBlob(long* phBlob, short nReservedBytes)
{
	static BYTE parms[] =
		VTS_PI4 VTS_I2;
	InvokeHelper(0xf1, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 phBlob, nReservedBytes);
}

void CF1Book::SetRowHidden(long nRow1, long nRow2, BOOL bHidden)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xf2, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nRow2, bHidden);
}

void CF1Book::SetColHidden(long nCol1, long nCol2, BOOL bHidden)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0xf3, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol1, nCol2, bHidden);
}

void CF1Book::SetColWidthTwips(long nCol1, long nCol2, short nWidth, BOOL bDefColWidth)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_BOOL;
	InvokeHelper(0xf4, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nCol1, nCol2, nWidth, bDefColWidth);
}

CString CF1Book::GetDefinedNameByIndex(short nName)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x11d, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nName);
	return result;
}

CString CF1Book::GetSheetName(short nSheet)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x11e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet);
	return result;
}

void CF1Book::SetSheetName(short nSheet, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x11e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, lpszNewValue);
}

unsigned long CF1Book::GetPaletteEntry(long nEntry)
{
	unsigned long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x11f, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, parms,
		nEntry);
	return result;
}

void CF1Book::SetPaletteEntry(long nEntry, unsigned long newValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x11f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nEntry, newValue);
}

void CF1Book::EditInsertSheets()
{
	InvokeHelper(0xf5, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::EditDeleteSheets()
{
	InvokeHelper(0xf6, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::InsertSheets(long nSheet, long nSheets)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xf7, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nSheets);
}

void CF1Book::DeleteSheets(long nSheet, long nSheets)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0xf8, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nSheets);
}

void CF1Book::Refresh()
{
	InvokeHelper(DISPID_REFRESH, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

short CF1Book::GetColWidthTwips(long nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x120, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		nCol);
	return result;
}

void CF1Book::SetColWidthTwips(long nCol, short nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x120, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nCol, nNewValue);
}

long CF1Book::NextColPageBreak(long Col)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xf9, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Col);
	return result;
}

long CF1Book::NextRowPageBreak(long Row)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfa, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Row);
	return result;
}

long CF1Book::ObjFirstID()
{
	long result;
	InvokeHelper(0xfb, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

long CF1Book::ObjNextID(long ObjID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfc, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ObjID);
	return result;
}

short CF1Book::ObjGetItemCount(long ObjID)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfd, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		ObjID);
	return result;
}

long CF1Book::ObjGetType(long ObjID)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0xfe, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ObjID);
	return result;
}

short CF1Book::ObjGetSelectionCount()
{
	short result;
	InvokeHelper(0xff, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

CString CF1Book::FormatRCNr(long Row, long Col, BOOL DoAbsolute)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x100, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		Row, Col, DoAbsolute);
	return result;
}

long CF1Book::SS()
{
	long result;
	InvokeHelper(0x101, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CF1Book::GetObjItem(long ObjID, short nItem)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x121, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		ObjID, nItem);
	return result;
}

void CF1Book::SetObjItem(long ObjID, short nItem, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_BSTR;
	InvokeHelper(0x121, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, nItem, lpszNewValue);
}

CString CF1Book::GetObjItems(long ObjID)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x122, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjItems(long ObjID, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x122, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, lpszNewValue);
}

CString CF1Book::GetObjName(long ObjID)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x123, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjName(long ObjID, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x123, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, lpszNewValue);
}

CString CF1Book::GetObjText(long ObjID)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x124, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjText(long ObjID, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x124, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, lpszNewValue);
}

short CF1Book::GetObjValue(long ObjID)
{
	short result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x125, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjValue(long ObjID, short nNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x125, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, nNewValue);
}

BOOL CF1Book::GetObjVisible(long ObjID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x126, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		ObjID);
	return result;
}

void CF1Book::SetObjVisible(long ObjID, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x126, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 ObjID, bNewValue);
}

long CF1Book::ObjNameToID(LPCTSTR Name)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x103, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		Name);
	return result;
}

long CF1Book::DefinedNameCount()
{
	long result;
	InvokeHelper(0x104, DISPATCH_METHOD, VT_I4, (void*)&result, NULL);
	return result;
}

CString CF1Book::GetAutoFillItems(short nIndex)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x127, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nIndex);
	return result;
}

void CF1Book::SetAutoFillItems(short nIndex, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x127, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nIndex, lpszNewValue);
}

void CF1Book::ValidationRuleDlg()
{
	InvokeHelper(0x105, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::SetValidationRule(LPCTSTR Rule, LPCTSTR Text)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x106, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Rule, Text);
}

void CF1Book::GetValidationRule(BSTR* Rule, BSTR* Text)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PBSTR;
	InvokeHelper(0x107, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Rule, Text);
}

short CF1Book::AutoFillItemsCount()
{
	short result;
	InvokeHelper(0x108, DISPATCH_METHOD, VT_I2, (void*)&result, NULL);
	return result;
}

void CF1Book::CopyRangeEx(long nDstSheet, long nDstR1, long nDstC1, long nDstR2, long nDstC2, long hSrcSS, long nSrcSheet, long nSrcR1, long nSrcC1, long nSrcR2, long nSrcC2)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x109, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nDstSheet, nDstR1, nDstC1, nDstR2, nDstC2, hSrcSS, nSrcSheet, nSrcR1, nSrcC1, nSrcR2, nSrcC2);
}

void CF1Book::Sort(long nR1, long nC1, long nR2, long nC2, BOOL bSortByRows, const VARIANT& Keys)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_VARIANT;
	InvokeHelper(0x10a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nR1, nC1, nR2, nC2, bSortByRows, &Keys);
}

BOOL CF1Book::GetColHidden(long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x128, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		nCol);
	return result;
}

void CF1Book::SetColHidden(long nCol, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x128, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nCol, bNewValue);
}

BOOL CF1Book::GetRowHidden(long nRow)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x129, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		nRow);
	return result;
}

void CF1Book::SetRowHidden(long nRow, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x129, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, bNewValue);
}

void CF1Book::DeleteAutoFillItems(short nIndex)
{
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x10b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nIndex);
}

void CF1Book::ODBCConnect(BSTR* pConnect, BOOL bShowErrors, short* pRetCode)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_BOOL VTS_PI2;
	InvokeHelper(0x10c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pConnect, bShowErrors, pRetCode);
}

void CF1Book::ODBCDisconnect()
{
	InvokeHelper(0x10d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ODBCQuery(BSTR* pQuery, long nRow, long nCol, BOOL bForceShowDlg, BOOL* pSetColNames, BOOL* pSetColFormats, BOOL* pSetColWidths, BOOL* pSetMaxRC, short* pRetCode)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_I4 VTS_I4 VTS_BOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PI2;
	InvokeHelper(0x10e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pQuery, nRow, nCol, bForceShowDlg, pSetColNames, pSetColFormats, pSetColWidths, pSetMaxRC, pRetCode);
}

BOOL CF1Book::GetSheetSelected(long nSheet)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x12a, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		nSheet);
	return result;
}

void CF1Book::SetSheetSelected(long nSheet, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x12a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, bNewValue);
}

void CF1Book::LaunchDesigner()
{
	InvokeHelper(0x10f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::PrintPreviewDC(long hDC, short nPage, short* pPages)
{
	static BYTE parms[] =
		VTS_I4 VTS_I2 VTS_PI2;
	InvokeHelper(0x521, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hDC, nPage, pPages);
}

void CF1Book::PrintPreview(long hWnd, long x, long y, long cx, long cy, short nPage, short* pPages)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2 VTS_PI2;
	InvokeHelper(0x522, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 hWnd, x, y, cx, cy, nPage, pPages);
}

CString CF1Book::GetEntrySRC(long nSheet, long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x523, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetEntrySRC(long nSheet, long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x523, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, lpszNewValue);
}

CString CF1Book::GetFormattedTextSRC(long nSheet, long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x524, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

CString CF1Book::GetFormulaSRC(long nSheet, long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x525, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetFormulaSRC(long nSheet, long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x525, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, lpszNewValue);
}

BOOL CF1Book::GetLogicalSRC(long nSheet, long nRow, long nCol)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x526, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetLogicalSRC(long nSheet, long nRow, long nCol, BOOL bNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x526, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, bNewValue);
}

double CF1Book::GetNumberSRC(long nSheet, long nRow, long nCol)
{
	double result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x527, DISPATCH_PROPERTYGET, VT_R8, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetNumberSRC(long nSheet, long nRow, long nCol, double newValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_R8;
	InvokeHelper(0x527, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, newValue);
}

CString CF1Book::GetTextSRC(long nSheet, long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x528, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetTextSRC(long nSheet, long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x528, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, lpszNewValue);
}

short CF1Book::GetTypeSRC(long nSheet, long nRow, long nCol)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x529, DISPATCH_PROPERTYGET, VT_I2, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::WriteRange(long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, LPCTSTR pPathName, short FileType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I2;
	InvokeHelper(0x52a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nRow1, nCol1, nRow2, nCol2, pPathName, FileType);
}

void CF1Book::InsertHTML(long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, LPCTSTR pPathName, BOOL bDataOnly, LPCTSTR pAnchorName)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_BOOL VTS_BSTR;
	InvokeHelper(0x52b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nRow1, nCol1, nRow2, nCol2, pPathName, bDataOnly, pAnchorName);
}

void CF1Book::FilePrintEx(BOOL bShowPrintDlg, BOOL bPrintWorkbook)
{
	static BYTE parms[] =
		VTS_BOOL VTS_BOOL;
	InvokeHelper(0x52c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 bShowPrintDlg, bPrintWorkbook);
}

void CF1Book::FilePrintPreview()
{
	InvokeHelper(0x52d, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CString CF1Book::GetFormulaLocalRC(long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x52f, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nRow, nCol);
	return result;
}

void CF1Book::SetFormulaLocalRC(long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x52f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nRow, nCol, lpszNewValue);
}

CString CF1Book::GetFormulaLocalSRC(long nSheet, long nRow, long nCol)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x530, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		nSheet, nRow, nCol);
	return result;
}

void CF1Book::SetFormulaLocalSRC(long nSheet, long nRow, long nCol, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_BSTR;
	InvokeHelper(0x530, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 nSheet, nRow, nCol, lpszNewValue);
}

CString CF1Book::GetDefinedNameLocal(LPCTSTR Name)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x531, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		Name);
	return result;
}

void CF1Book::SetDefinedNameLocal(LPCTSTR Name, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR;
	InvokeHelper(0x531, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 Name, lpszNewValue);
}

void CF1Book::CopyDataFromArray(long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, BOOL bValuesOnly, const VARIANT& Array)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_VARIANT;
	InvokeHelper(0x534, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nRow1, nCol1, nRow2, nCol2, bValuesOnly, &Array);
}

void CF1Book::CopyDataToArray(long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, BOOL bValuesOnly, const VARIANT& Array)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL VTS_VARIANT;
	InvokeHelper(0x535, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nRow1, nCol1, nRow2, nCol2, bValuesOnly, &Array);
}

void CF1Book::FindDlg()
{
	InvokeHelper(0x537, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ReplaceDlg()
{
	InvokeHelper(0x538, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::Find(LPCTSTR FindWhat, long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, short Flags, long* pFound)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2 VTS_PI4;
	InvokeHelper(0x539, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 FindWhat, nSheet, nRow1, nCol1, nRow2, nCol2, Flags, pFound);
}

void CF1Book::Replace(LPCTSTR FindWhat, LPCTSTR ReplaceWith, long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, short Flags, long* pFound, long* pReplaced)
{
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2 VTS_PI4 VTS_PI4;
	InvokeHelper(0x53a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 FindWhat, ReplaceWith, nSheet, nRow1, nCol1, nRow2, nCol2, Flags, pFound, pReplaced);
}

void CF1Book::ODBCError(BSTR* pSQLState, long* pNativeError, BSTR* pErrorMsg)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PI4 VTS_PBSTR;
	InvokeHelper(0x53b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pSQLState, pNativeError, pErrorMsg);
}

void CF1Book::ODBCPrepare(LPCTSTR SQLStr, short* pRetCode)
{
	static BYTE parms[] =
		VTS_BSTR VTS_PI2;
	InvokeHelper(0x53c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 SQLStr, pRetCode);
}

void CF1Book::ODBCBindParameter(long nParam, long nCol, short CDataType, short* pRetCode)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I2 VTS_PI2;
	InvokeHelper(0x53d, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nParam, nCol, CDataType, pRetCode);
}

void CF1Book::ODBCExecute(long nRow1, long nRow2, short* pRetCode)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_PI2;
	InvokeHelper(0x53e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nRow1, nRow2, pRetCode);
}

void CF1Book::InsertDlg()
{
	InvokeHelper(0x53f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::ObjNewPolygon(float X1, float Y1, float X2, float Y2, long* pID, const VARIANT& ArrayX, const VARIANT& ArrayY, BOOL bClosed)
{
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_PI4 VTS_VARIANT VTS_VARIANT VTS_BOOL;
	InvokeHelper(0x541, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 X1, Y1, X2, Y2, pID, &ArrayX, &ArrayY, bClosed);
}

void CF1Book::ObjSetPolygonPoints(long nID, const VARIANT& ArrayX, const VARIANT& ArrayY, BOOL bClosed)
{
	static BYTE parms[] =
		VTS_I4 VTS_VARIANT VTS_VARIANT VTS_BOOL;
	InvokeHelper(0x542, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nID, &ArrayX, &ArrayY, bClosed);
}

void CF1Book::DefRowHeightDlg()
{
	InvokeHelper(0x543, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::DefColWidthDlg()
{
	InvokeHelper(0x544, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::DeleteDlg()
{
	InvokeHelper(0x545, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CF1Book::FormatObjectDlg(long Pages)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x547, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Pages);
}

void CF1Book::OptionsDlg(long Pages)
{
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x549, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Pages);
}

void CF1Book::FormatSheetDlg(long Pages, BOOL bDesignerMode)
{
	static BYTE parms[] =
		VTS_I4 VTS_BOOL;
	InvokeHelper(0x548, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Pages, bDesignerMode);
}

CString CF1Book::GetTabbedTextEx(long nR1, long nC1, long nR2, long nC2, BOOL bValuesOnly)
{
	CString result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x54f, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		nR1, nC1, nR2, nC2, bValuesOnly);
	return result;
}

CF1RangeRef CF1Book::SetTabbedTextEx(long nStartRow, long nStartCol, BOOL bValuesOnly, LPCTSTR pText)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_BOOL VTS_BSTR;
	InvokeHelper(0x550, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		nStartRow, nStartCol, bValuesOnly, pText);
	return CF1RangeRef(pDispatch);
}

long CF1Book::ObjCreate(long ObjType, float nX1, float nY1, float nX2, float nY2)
{
	long result;
	static BYTE parms[] =
		VTS_I4 VTS_R4 VTS_R4 VTS_R4 VTS_R4;
	InvokeHelper(0x55d, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		ObjType, nX1, nY1, nX2, nY2);
	return result;
}

long CF1Book::ObjCreatePicture(float nX1, float nY1, float nX2, float nY2, long hMF, long nMapMode, long nWndExtentX, long nWndExtentY)
{
	long result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x55e, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nX1, nY1, nX2, nY2, hMF, nMapMode, nWndExtentX, nWndExtentY);
	return result;
}

long CF1Book::ReadEx(LPCTSTR pPathName)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x55f, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		pPathName);
	return result;
}

long CF1Book::WriteToBlobEx(short nReservedBytes)
{
	long result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x560, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nReservedBytes);
	return result;
}

long CF1Book::ObjCreatePolygon(float X1, float Y1, float X2, float Y2, const VARIANT& ArrayX, const VARIANT& ArrayY, BOOL bClosed)
{
	long result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4 VTS_VARIANT VTS_VARIANT VTS_BOOL;
	InvokeHelper(0x561, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		X1, Y1, X2, Y2, &ArrayX, &ArrayY, bClosed);
	return result;
}

CF1ObjPos CF1Book::ObjGetPosEx(long ObjID)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x562, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		ObjID);
	return CF1ObjPos(pDispatch);
}

short CF1Book::ObjPosShown(float X1, float Y1, float X2, float Y2)
{
	short result;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4;
	InvokeHelper(0x563, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		X1, Y1, X2, Y2);
	return result;
}

CF1RangeRef CF1Book::GetSelectionEx(short nSelection)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x564, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, parms,
		nSelection);
	return CF1RangeRef(pDispatch);
}

CF1Rect CF1Book::ObjPosToTwipsEx(float X1, float Y1, float X2, float Y2)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_R4 VTS_R4 VTS_R4 VTS_R4;
	InvokeHelper(0x565, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		X1, Y1, X2, Y2);
	return CF1Rect(pDispatch);
}

CF1Rect CF1Book::RangeToTwipsEx(long nRow1, long nCol1, long nRow2, long nCol2)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x566, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		nRow1, nCol1, nRow2, nCol2);
	return CF1Rect(pDispatch);
}

short CF1Book::RangeShown(long nR1, long nC1, long nR2, long nC2)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x567, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nR1, nC1, nR2, nC2);
	return result;
}

long CF1Book::TwipsToRow(long nTwips)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x568, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nTwips);
	return result;
}

long CF1Book::TwipsToCol(long nTwips)
{
	long result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x569, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		nTwips);
	return result;
}

short CF1Book::PrintPreviewDCEx(long hDC, short nPage)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I2;
	InvokeHelper(0x56a, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hDC, nPage);
	return result;
}

short CF1Book::PrintPreviewEx(long hWnd, long x, long y, long cx, long cy, short nPage)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2;
	InvokeHelper(0x56b, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		hWnd, x, y, cx, cy, nPage);
	return result;
}

void CF1Book::SaveFileDlgEx(LPCTSTR Title, LPDISPATCH pFileSpec)
{
	static BYTE parms[] =
		VTS_BSTR VTS_DISPATCH;
	InvokeHelper(0x56c, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Title, pFileSpec);
}

void CF1Book::ODBCConnectEx(LPDISPATCH pConnectObj, BOOL bShowErrors)
{
	static BYTE parms[] =
		VTS_DISPATCH VTS_BOOL;
	InvokeHelper(0x579, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pConnectObj, bShowErrors);
}

void CF1Book::ODBCQueryEx(LPDISPATCH pQueryObj, long nRow, long nCol, BOOL bForceShowDlg)
{
	static BYTE parms[] =
		VTS_DISPATCH VTS_I4 VTS_I4 VTS_BOOL;
	InvokeHelper(0x57a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pQueryObj, nRow, nCol, bForceShowDlg);
}

short CF1Book::ODBCPrepareEx(LPCTSTR SQLStr)
{
	short result;
	static BYTE parms[] =
		VTS_BSTR;
	InvokeHelper(0x57e, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		SQLStr);
	return result;
}

short CF1Book::ODBCBindParameterEx(long nParam, long nCol, long CDataType)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x57f, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nParam, nCol, CDataType);
	return result;
}

short CF1Book::ODBCExecuteEx(long nRow1, long nRow2)
{
	short result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x580, DISPATCH_METHOD, VT_I2, (void*)&result, parms,
		nRow1, nRow2);
	return result;
}

long CF1Book::FindEx(LPCTSTR FindWhat, long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, short Flags)
{
	long result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2;
	InvokeHelper(0x581, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
		FindWhat, nSheet, nRow1, nCol1, nRow2, nCol2, Flags);
	return result;
}

CF1ReplaceResults CF1Book::ReplaceEx(LPCTSTR FindWhat, LPCTSTR ReplaceWith, long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, short Flags)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_BSTR VTS_BSTR VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I2;
	InvokeHelper(0x582, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		FindWhat, ReplaceWith, nSheet, nRow1, nCol1, nRow2, nCol2, Flags);
	return CF1ReplaceResults(pDispatch);
}

CString CF1Book::OpenFileDlgEx(LPCTSTR pTitle, long hWndParent)
{
	CString result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x586, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		pTitle, hWndParent);
	return result;
}

CF1BookView CF1Book::CreateBookView()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x588, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CF1BookView(pDispatch);
}

void CF1Book::EditPasteSpecial(long PasteWhat, long PasteOp)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x58e, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PasteWhat, PasteOp);
}

void CF1Book::PasteSpecialDlg()
{
	InvokeHelper(0x58f, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CF1NumberFormat CF1Book::GetFirstNumberFormat()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x590, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CF1NumberFormat(pDispatch);
}

void CF1Book::GetNextNumberFormat(LPDISPATCH pNumberFormat)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x591, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pNumberFormat);
}

CF1Rect CF1Book::RangeToPixelsEx(long nRow1, long nCol1, long nRow2, long nCol2)
{
	LPDISPATCH pDispatch;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4;
	InvokeHelper(0x592, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, parms,
		nRow1, nCol1, nRow2, nCol2);
	return CF1Rect(pDispatch);
}

void CF1Book::WriteEx(LPCTSTR PathName, long FileType)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x594, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 PathName, FileType);
}

void CF1Book::WriteRangeEx(long nSheet, long nRow1, long nCol1, long nRow2, long nCol2, LPCTSTR pPathName, long FileType)
{
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_I4 VTS_BSTR VTS_I4;
	InvokeHelper(0x595, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 nSheet, nRow1, nCol1, nRow2, nCol2, pPathName, FileType);
}

void CF1Book::GetFontEx(BSTR* pName, long* pCharSet, short* pSize, BOOL* pBold, BOOL* pItalic, BOOL* pUnderline, BOOL* pStrikeout, long* pcrColor, BOOL* pOutline, BOOL* pShadow)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PI4 VTS_PI2 VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PBOOL VTS_PI4 VTS_PBOOL VTS_PBOOL;
	InvokeHelper(0x597, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pName, pCharSet, pSize, pBold, pItalic, pUnderline, pStrikeout, pcrColor, pOutline, pShadow);
}

void CF1Book::SetFontEx(LPCTSTR pName, long CharSet, short nSize, BOOL bBold, BOOL bItalic, BOOL bUnderline, BOOL bStrikeout, unsigned long crColor, BOOL bOutline, BOOL bShadow)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I2 VTS_BOOL VTS_BOOL VTS_BOOL VTS_BOOL VTS_I4 VTS_BOOL VTS_BOOL;
	InvokeHelper(0x598, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pName, CharSet, nSize, bBold, bItalic, bUnderline, bStrikeout, crColor, bOutline, bShadow);
}

void CF1Book::GetDefaultFontEx(BSTR* pBuf, long* pCharSet, short* pSize)
{
	static BYTE parms[] =
		VTS_PBSTR VTS_PI4 VTS_PI2;
	InvokeHelper(0x59a, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pBuf, pCharSet, pSize);
}

void CF1Book::SetDefaultFontEx(LPCTSTR Name, long CharSet, short nSize)
{
	static BYTE parms[] =
		VTS_BSTR VTS_I4 VTS_I2;
	InvokeHelper(0x59b, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 Name, CharSet, nSize);
}

CF1CellFormat CF1Book::CreateNewCellFormat()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x59d, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CF1CellFormat(pDispatch);
}

CF1CellFormat CF1Book::GetCellFormat()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0x59e, DISPATCH_METHOD, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CF1CellFormat(pDispatch);
}

void CF1Book::SetCellFormat(LPDISPATCH CellFormat)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0x59f, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 CellFormat);
}

CString CF1Book::ErrorNumberToText(long SSError)
{
	CString result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x102, DISPATCH_METHOD, VT_BSTR, (void*)&result, parms,
		SSError);
	return result;
}
