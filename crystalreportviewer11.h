#if !defined(AFX_CRYSTALREPORTVIEWER11_H__88C87C17_B1CD_4A58_BDE4_67C8DBADD6A5__INCLUDED_)
#define AFX_CRYSTALREPORTVIEWER11_H__88C87C17_B1CD_4A58_BDE4_67C8DBADD6A5__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CCRVTrackCursorInfo;

/////////////////////////////////////////////////////////////////////////////
// CCrystalReportViewer11 wrapper class

class CCrystalReportViewer11 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCrystalReportViewer11)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x6f0892f7, 0xd44, 0x41c3, { 0xbf, 0x7, 0x75, 0x99, 0x87, 0x3f, 0xaa, 0x4 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	LPUNKNOWN GetReportSource();
	void SetReportSource(LPUNKNOWN newValue);
	BOOL GetDisplayGroupTree();
	void SetDisplayGroupTree(BOOL bNewValue);
	BOOL GetDisplayToolbar();
	void SetDisplayToolbar(BOOL bNewValue);
	BOOL GetEnableGroupTree();
	void SetEnableGroupTree(BOOL bNewValue);
	BOOL GetEnableNavigationControls();
	void SetEnableNavigationControls(BOOL bNewValue);
	BOOL GetEnableStopButton();
	void SetEnableStopButton(BOOL bNewValue);
	BOOL GetEnablePrintButton();
	void SetEnablePrintButton(BOOL bNewValue);
	BOOL GetEnableZoomControl();
	void SetEnableZoomControl(BOOL bNewValue);
	BOOL GetEnableCloseButton();
	void SetEnableCloseButton(BOOL bNewValue);
	BOOL GetEnableProgressControl();
	void SetEnableProgressControl(BOOL bNewValue);
	BOOL GetEnableSearchControl();
	void SetEnableSearchControl(BOOL bNewValue);
	BOOL GetEnableRefreshButton();
	void SetEnableRefreshButton(BOOL bNewValue);
	BOOL GetEnableDrillDown();
	void SetEnableDrillDown(BOOL bNewValue);
	BOOL GetEnableAnimationCtrl();
	void SetEnableAnimationCtrl(BOOL bNewValue);
	BOOL GetEnableSelectExpertButton();
	void SetEnableSelectExpertButton(BOOL bNewValue);
	void ViewReport();
	BOOL GetEnableToolbar();
	void SetEnableToolbar(BOOL bNewValue);
	BOOL GetDisplayBorder();
	void SetDisplayBorder(BOOL bNewValue);
	BOOL GetDisplayTabs();
	void SetDisplayTabs(BOOL bNewValue);
	BOOL GetDisplayBackgroundEdge();
	void SetDisplayBackgroundEdge(BOOL bNewValue);
	CCRVTrackCursorInfo GetTrackCursorInfo();
	short GetActiveViewIndex();
	short GetViewCount();
	void ActivateView(const VARIANT& Index);
	void AddView(const VARIANT& GroupPath);
	void CloseView(const VARIANT& Index);
	VARIANT GetViewPath(short Index);
	void PrintReport();
	void Refresh();
	void SearchForText(LPCTSTR Text);
	void ShowFirstPage();
	void ShowNextPage();
	void ShowPreviousPage();
	void ShowLastPage();
	void ShowNthPage(short PageNumber);
	void Zoom(short ZoomLevel);
	long GetCurrentPageNumber();
	void ShowGroup(const VARIANT& GroupPath);
	BOOL GetIsBusy();
	BOOL GetEnablePopupMenu();
	void SetEnablePopupMenu(BOOL bNewValue);
	BOOL GetEnableExportButton();
	void SetEnableExportButton(BOOL bNewValue);
	BOOL GetEnableSearchExpertButton();
	void SetEnableSearchExpertButton(BOOL bNewValue);
	void SearchByFormula(LPCTSTR formula);
	CString GetViewName(BSTR* pTabName);
	BOOL GetEnableHelpButton();
	void SetEnableHelpButton(BOOL bNewValue);
	VARIANT GetGroup();
	void GetLastPageNumber(long* pageN, BOOL* lastPageKnown);
	void RefreshEx(BOOL refreshServerData);
	BOOL GetLaunchHTTPHyperlinksInNewBrowser();
	void SetLaunchHTTPHyperlinksInNewBrowser(BOOL bNewValue);
	unsigned long GetLocaleID();
	void SetLocaleID(unsigned long newValue);
	BOOL GetEnableInteractiveParameterPrompting();
	void SetEnableInteractiveParameterPrompting(BOOL bNewValue);
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Visual C++ will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_CRYSTALREPORTVIEWER11_H__88C87C17_B1CD_4A58_BDE4_67C8DBADD6A5__INCLUDED_)
