//
//  This program code is a part of The Master Scheduler (TMS)
//  and is Copyright (C) 1991-2004 Schedule Masters, Inc.
//  All rights reserved.
//
   BOOL CALLBACK  ABOUTTMSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDBLOCKMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDJURISDICTIONMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  AdjustDispatchSheetRosterData(DISPATCHSHEETRosterDataDef *, long, long, long, BOOL, BOOL);
   BOOL CALLBACK  ADDPATTERNMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDROSTERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDRUNMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDRUNCOMMENTMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDRUNTYPEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDSERVICEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDSIGNCODEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ADDTRIPMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  AllocationError(char *, int, BOOL);
   BOOL CALLBACK  ALTERRUNTYPEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ANALYZERUNMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  ANegatedRecord(long, int);
            BOOL  ANegatingRecord(DAILYOPSDef *);
             int  AssembleRuns(void);
            void  AssertNotification(char *, int);
   BOOL CALLBACK  ASSIGNDRIVERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ASSIGNTRIPMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ASSIGNVEHICLETYPEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  ASSREMGARAGEMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  AuditFilter(AUDITFILTERSELECTIONSDef *);
            void  AutomaticRunCut(short int);
   BOOL CALLBACK  BCTRAVELMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  BIDDINGMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  BLCleanup(void);
            void  BLGenerateDeadheadArcs(DEADHEADINFODef *);
            void  BLGenerateTripArc(TRIPINFODef *);
            void  BLGenerateWaitArcs(int);
            void  BLInitNetwork(void);
            BOOL  BlockDialog(PDISPLAYINFO);
   BOOL CALLBACK  BLOCKSUMMARYMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  BLSetOptions(BOOL);
             int  btrieve(int, int, void *, void *, int);
            char *BuildOperatorString(long);
             int  CalendarDate(long *, long *, long *);
            char *CalendarDateWithOffset(long, long, long, int);
   BOOL CALLBACK  CHANGEBUSTYPESMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGECCOMMENTSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGEOCOMMENTSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGELAYOVERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGEPATTERNSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGESIGNCODESMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGETRIPNUMBERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGETRIPNUMBERSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CHANGETRIPSHIFTMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  CheckNodeLabel(long, NODESDef *, int);

            char *chhmm(long);
            char *chhmmlb(long);
            char *chhmmnc(long);
LRESULT CALLBACK  ChildWndProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  CloseEnumProc(HWND, LONG);
             int  CompareLongs(const void *, const void *);
            void  compBlock(HWND, DATABASEDef *);
            BOOL  ConsideringThisDriverType(long);
   BOOL CALLBACK  COPYPATTERNSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  COPYTRIPSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  COSTHOOKEDRUNASMsgProc(HWND, UINT, WPARAM, LPARAM);
            long  cTime(char *);
   BOOL CALLBACK  CUSTCOMMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  CutCrew(void);
            void  CwUnRegisterClasses(void);
            void  DataAspect(HWND);
             int  Database(void);
   BOOL CALLBACK  DATAFIELDMsgProc(HWND, UINT, WPARAM, LPARAM);
             int  dataHighlight(HWND);
             int  dataPrint(HWND, PRINTDLG *);
             int  dataScroll(HWND, HDC);
            BOOL  DeleteRecord(int, long, BOOL, BOOL, HWND);
   BOOL CALLBACK  DELETERUNSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  DesktopEnumProc(HWND, LONG);
            BOOL  DisciplineFilter(DISCIPLINEFILTERSELECTIONSDef *);
            BOOL  DispatchSheet(DISPATCHSHEETPassedDataDef *);
            void  DoTitle(char *);
            void  DisplayPlacement(HWND, int, PDISPLAYINFO, long);
            void  DrawBars(HWND, int);
             int  DrawGraph(HWND, HDC);
            void  EN2LL(int, double, double, char*, double *, double *);
   BOOL CALLBACK  EnumCloseChildren(HWND, LPARAM);
   BOOL CALLBACK  EnumForChangedConnections(HWND, LPARAM);
            BOOL  EventReport(EVENTREPORTPassedDataDef *);
   BOOL CALLBACK  EXTRABOARDEDITORMsgProc(HWND, UINT, WPARAM, LPARAM);
          double  FastGreatCircleDistance(double, double, double, double);
   BOOL CALLBACK  FIELDDEFMsgProc(HWND, UINT, WPARAM, LPARAM);
            char *floatString(long, long, BOOL);
LRESULT CALLBACK  FrameWndProc(HWND, UINT, WPARAM, LPARAM);
            void  FreeAll(int);
             int  GenerateBlockList(long, long, REPORTPARMSDef *);
             int  GenerateRunList(long, long, REPORTPARMSDef *);
             int  GenerateTrip(long, long, int, long, long, long, GenerateTripDef *);
            char *GetBlockName(long);
            long  GetConnectionTime(long, GetConnectionTimeDef *, float *);
             int  GetDayFromDate(long);
            long  GetDynamicTravelTime(BOOL, long, long, long, long, long *);
            BOOL  getflds(int);
            void  GetHMS(long, long *, long *, long *);
            void  GetHMSBizarre(long, long *, long *, long *);
           float  GetLLEN(float, char *);
            BOOL  GetLongLat(char *, float *, float *, BOOL, HWND);
            long  GetMostAppropriateConnectionTime(int, int, long, GetConnectionTimeDef *, float *);
            long  GetNewBlockNumber(DISPLAYINFO *);
            void  GetPatternElements(HWND, int);
      HDC PASCAL  GetPrinterDC(void);
             int  GetRosterElemeners(HWND, int);
             int  GetRunElements(HWND, RUNSDef *, PROPOSEDRUNDef *, COSTDef *, BOOL);
             int  GetRunRecords(long, long);
           float  GetStopDistance(float, float, float, float);
            long  GetTimeAtNode(long, long, int, TRIPSDef *);
            void  GetTripElements(HWND, int, BOOL, BOOL);
            void  GetYMD(long, long *, long *, long *);
          double  GreatCircleDistance(double, double, double, double);
            void  HandleEvent(HWND, WORD, long);
   BOOL CALLBACK  HOOKBLOCKSMsgProc(HWND, UINT, WPARAM, LPARAM);
             int  IndexFromRunID(int *, long, long);
            void  InitFastGreatCircleDimensions(double, double);
     BOOL PASCAL  InitPrinting(HDC, HWND, HANDLE, LPSTR);
            void  InitTravelMatrix(long, BOOL);
   BOOL CALLBACK  LAYOVERMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  LeftCtrlPress(HWND);
            void  LL2EN(int, double, double,  double *, double *, char *);
            void  lpRun(void);
  int FAR PASCAL  MainHookProc(int, WORD, DWORD);
            void  makeRoster(int, unsigned int *, BOOL, BOOL, long, long, int);
   BOOL CALLBACK  MANCUTMsgProc(HWND, UINT, WPARAM, LPARAM);
          double  MapInfoDistance(double, double, double, double);
             int  MIFDigest(MIFPASSEDDATADef *, MIFLINESDef *);
  int FAR PASCAL  MsgHookProc(int, WORD, DWORD);
             int  nCwCheckRadioButtons(HWND, int *, int, int);
            BOOL  nCwRegisterClasses(void);
   BOOL CALLBACK  NEWDATABASEMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  newopen(void);
            void  NoConnectionErrorMessage(long, long);
            char *NodeAbbrFromRecID(long);
            char *NodeAndNode(long, long);
            long  NodeEquivalenced(long);
   BOOL CALLBACK  NODEFINDERMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  NodesEquivalent(long, long, long *);
   BOOL CALLBACK  OVERTIMEMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  pad(char *, int);
   BOOL CALLBACK  PaintProc(HWND);
   BOOL CALLBACK  PARAMETERSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PATTERNNODESMsgProc(HWND, UINT, WPARAM, LPARAM);
            char *PhoneString(long, long);
   BOOL CALLBACK  PICKCONNECTIONMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PICKDIVISIONMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PICKROUTESERVICEMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  PlotLeft(void);
            void *PoolCalloc(int, int, int);
   BOOL CALLBACK  POPIPIECESMsgProc(HWND, UINT, WPARAM, LPARAM);
             int  position(HWND);
   BOOL CALLBACK  PrintDlgProc (HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PREFERENCESMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  PremiumDefinition(PDISPLAYINFO);
   BOOL CALLBACK  PREMIUMSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PREVIEWTMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  PrintWindowToDC(HWND, char *);
   BOOL CALLBACK  PROFILEMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  PULLOUTPULLINMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  RestoreDesktop(char *, HWND);
            BOOL  ReadWorkrules(HWND);
          double  RectilinearGreatCircleDistance(double, double, double, double);
             int  redraw(HWND, HDC);
   BOOL CALLBACK  RedrawEnumProc(HWND, LONG);
   BOOL CALLBACK  RELIEFPOINTSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RENRUNSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RENUMBERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RENUMBLOCKSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RENUMROSTERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RENUMRUNSMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  RightCtrlPress(HWND);
            long  RosterCoster(int, int, int, int);
             int  RosterCosterCanCombine(int, int, int, int);
            long  RosterCosterNonConsecutive(int, int, int, int);
            BOOL  RosterDialog(PDISPLAYINFO);
   BOOL CALLBACK  RPTPARMSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RTATTRIBMsgProc(HWND, UINT, WPARAM, LPARAM);
            long  RunCoster(PROPOSEDRUNDef *, long, COSTDef *);
             int  RuncutImprove(long *);
            void  RunStartAndEnd(long, long, long, long, long *, long *);
            void  RunSummary(void);
   BOOL CALLBACK  RUNSUMMARYMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RUNSUMMENUMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  RUNTYPESMsgProc(HWND, UINT, WPARAM, LPARAM);
            int   sblock(long, long);
   BOOL CALLBACK  SERIALNUMBERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  SERVICEDAYSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  SETCOLMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  setdivision(void);
            void  setroute(void);
             int  SetUpBlocksListbox(PDISPLAYINFO, HANDLE);
             int  SetUpBustypeList(HWND, int);
             int  SetUpCommentList(HWND, int);
             int  SetUpDirectionList(HWND, int, int);
             int  SetUpDivisionList(HWND, int, LONG);
             int  SetUpDriverTypeList(HWND, int, LONG);
             int  SetUpJurisdictionList(HWND, int);
             int  SetUpLabelArray(char *, long, HANDLE);
             int  SetUpNodeList(HWND, int, BOOL);
             int  SetUpPatternList(HWND, int, long, long, int, BOOL, BOOL);
             int  SetUpReliefLabels(HWND, long,  int, char *, int);
             int  SetUpReliefPoints(HWND, PDISPLAYINFO, int, int, int, BOOL);
             int  SetUpRouteList(HWND, int, long);
             int  SetUpRunList(HWND, long, long, int);
             int  SetUpServiceList(HWND, int, long);
             int  SetUpSigncodeList(HWND, int);
   BOOL CALLBACK  SHIFTRUNMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  SORTBYCOLUMNMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  SortRenumberRosters();
   BOOL CALLBACK  SORTTRIPMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  STARTENDMsgProc(HWND, UINT, WPARAM, LPARAM);
   void CALLBACK  StatusBar(long, long);
   BOOL CALLBACK  StatusBarAbort(void);
   BOOL CALLBACK  StatusBarDlgProc(HWND, UINT, WPARAM, LPARAM);
   void CALLBACK  StatusBarEnableCancel(BOOL);
   void CALLBACK  StatusBarEnd(void);
   void CALLBACK  StatusBarStart(HWND, LPSTR);
   void CALLBACK  StatusBarText(LPSTR);
            void  StatusBarYield(HWND);
   BOOL CALLBACK  SWAPPIECESMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  SUMMARIZEBLOCKMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  SUPERVISORMsgProc(HWND, UINT, WPARAM, LPARAM);
            char *Tchar(long);
            char *TcharNAP(long, BOOL);
            char *Tdec(long);
            long  thhmm(char *);
            void  TMSError(HWND, UINT, UINT, HANDLE);
         HGLOBAL  TMSGlobalFree(HGLOBAL);
            BOOL  TMSHeapFree(void *);
          time_t  TMSmktime(long, long);
            BOOL  TMSRPT01(TMSRPTPassedDataDef *);
   BOOL CALLBACK  TMSRPT01CMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  TMSRPT02(TMSRPTPassedDataDef *);
   BOOL CALLBACK  TMSRPT02CMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  TMSRPT03(TMSRPTPassedDataDef *);
            BOOL  TMSRPT04(TMSRPTPassedDataDef *);
            BOOL  TMSRPT05(TMSRPTPassedDataDef *);
            BOOL  TMSRPT06(TMSRPTPassedDataDef *);
            BOOL  TMSRPT07(TMSRPTPassedDataDef *);
            BOOL  TMSRPT08(TMSRPTPassedDataDef *);
            BOOL  TMSRPT09(TMSRPTPassedDataDef *);
   BOOL CALLBACK  TMSRPT09CMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  TMSRPT10(TMSRPTPassedDataDef *);
            BOOL  TMSRPT11(TMSRPTPassedDataDef *);
            BOOL  TMSRPT12(TMSRPTPassedDataDef *);
            BOOL  TMSRPT13(TMSRPTPassedDataDef *);
            BOOL  TMSRPT14(TMSRPTPassedDataDef *);
            BOOL  TMSRPT15(TMSRPTPassedDataDef *);
            BOOL  TMSRPT16(TMSRPTPassedDataDef *);
            BOOL  TMSRPT17(TMSRPTPassedDataDef *);
            BOOL  TMSRPT18(TMSRPTPassedDataDef *);
            BOOL  TMSRPT19(TMSRPTPassedDataDef *);
            BOOL  TMSRPT20(TMSRPTPassedDataDef *);
            BOOL  TMSRPT21(TMSRPTPassedDataDef *);
            BOOL  TMSRPT22(TMSRPTPassedDataDef *);
            BOOL  TMSRPT23(TMSRPTPassedDataDef *);
            BOOL  TMSRPT24(TMSRPTPassedDataDef *);
            BOOL  TMSRPT25(TMSRPTPassedDataDef *);
            BOOL  TMSRPT26(TMSRPTPassedDataDef *);
            BOOL  TMSRPT27(TMSRPTPassedDataDef *);
            BOOL  TMSRPT28(TMSRPTPassedDataDef *);
            BOOL  TMSRPT29(TMSRPTPassedDataDef *);
            BOOL  TMSRPT30(TMSRPTPassedDataDef *);
            BOOL  TMSRPT31(TMSRPTPassedDataDef *);
            BOOL  TMSRPT32(TMSRPTPassedDataDef *);
   BOOL CALLBACK  TMSRPT32CMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  TMSRPT33(TMSRPTPassedDataDef *);
            BOOL  TMSRPT34(TMSRPTPassedDataDef *);
            BOOL  TMSRPT35(TMSRPTPassedDataDef *);
            BOOL  TMSRPT36(TMSRPTPassedDataDef *);
            BOOL  TMSRPT36Filter(TMSRPT36PassedDataDef *);
            BOOL  TMSRPT37(TMSRPTPassedDataDef *);
            BOOL  TMSRPT38(TMSRPTPassedDataDef *);
            BOOL  TMSRPT39(TMSRPTPassedDataDef *);
            BOOL  TMSRPT40(TMSRPTPassedDataDef *);
            BOOL  TMSRPT41(TMSRPTPassedDataDef *);
            BOOL  TMSRPT42(TMSRPTPassedDataDef *);
            BOOL  TMSRPT43(TMSRPTPassedDataDef *);
            BOOL  TMSRPT44(TMSRPTPassedDataDef *);
            BOOL  TMSRPT45(TMSRPTPassedDataDef *);
            BOOL  TMSRPT46(TMSRPTPassedDataDef *);
            BOOL  TMSRPT47(TMSRPTPassedDataDef *);
            BOOL  TMSRPT48(TMSRPTPassedDataDef *);
            BOOL  TMSRPT48Filter(TMSRPT48PassedDataDef *);
            BOOL  TMSRPT49(TMSRPTPassedDataDef *);
            BOOL  TMSRPT50(TMSRPTPassedDataDef *);
            BOOL  TMSRPT51(TMSRPTPassedDataDef *);
            BOOL  TMSRPT52(TMSRPTPassedDataDef *);
            BOOL  TMSRPT53(TMSRPTPassedDataDef *);
            BOOL  TMSRPT54(TMSRPTPassedDataDef *);
            BOOL  TMSRPT55(TMSRPTPassedDataDef *);
            BOOL  TMSRPT56(TMSRPTPassedDataDef *);
            BOOL  TMSRPT57(TMSRPTPassedDataDef *);
            BOOL  TMSRPT58(TMSRPTPassedDataDef *);
            BOOL  TMSRPT59(TMSRPTPassedDataDef *);
            BOOL  TMSRPT60(TMSRPTPassedDataDef *);
            BOOL  TMSRPT61(TMSRPTPassedDataDef *);
            BOOL  TMSRPT62(TMSRPTPassedDataDef *);
            BOOL  TMSRPT63(TMSRPTPassedDataDef *);
            BOOL  TMSRPT64(TMSRPTPassedDataDef *);
            BOOL  TMSRPT65(TMSRPTPassedDataDef *);
            BOOL  TMSRPT66(TMSRPTPassedDataDef *);
            BOOL  TMSRPT67(TMSRPTPassedDataDef *);
            BOOL  TMSRPT68(TMSRPTPassedDataDef *);
            BOOL  TMSRPT69(TMSRPTPassedDataDef *);
            BOOL  TMSRPT70(TMSRPTPassedDataDef *);
            BOOL  TMSRPT71(TMSRPTPassedDataDef *);
            BOOL  TMSRPT72(TMSRPTPassedDataDef *);
            BOOL  TMSRPT73(TMSRPTPassedDataDef *);
            BOOL  TMSRPT74(TMSRPTPassedDataDef *);
            BOOL  TMSRPT75(TMSRPTPassedDataDef *);
            BOOL  TMSRPT76(TMSRPTPassedDataDef *);
            BOOL  TMSRPT77(TMSRPTPassedDataDef *);
            BOOL  TMSRPT78(TMSRPTPassedDataDef *);
            BOOL  TMSRPT79(TMSRPTPassedDataDef *);
            BOOL  TMSRPT80(TMSRPTPassedDataDef *);
            BOOL  TMSRPT81(TMSRPTPassedDataDef *);
            BOOL  TMSRPT82(TMSRPTPassedDataDef *);
            BOOL  TMSRPT83(TMSRPTPassedDataDef *);
            BOOL  TMSRPT84(TMSRPTPassedDataDef *);
            BOOL  TMSRPT85(TMSRPTPassedDataDef *);
            BOOL  TMSRPT86(TMSRPTPassedDataDef *);
            BOOL  TMSRPT87(TMSRPTPassedDataDef *);
            BOOL  TMSRPT88(TMSRPTPassedDataDef *);
            BOOL  TMSRPT89(TMSRPTPassedDataDef *);
            BOOL  TMSRPT90(TMSRPTPassedDataDef *);
            BOOL  TMSRPT91(TMSRPTPassedDataDef *);
            BOOL  TMSRPT92(TMSRPTPassedDataDef *);
            BOOL  TMSRPT93(TMSRPTPassedDataDef *);
            BOOL  TMSRPT94(TMSRPTPassedDataDef *);
            BOOL  TMSRPT95(TMSRPTPassedDataDef *);
            BOOL  TMSRPT96(TMSRPTPassedDataDef *);
   BOOL CALLBACK  TRAVELINSTRUCTIONSMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  trim(char *, int);
             int  TripGraph(PDISPLAYINFO);
            void  TripGraphOld(HDC, RECT, PDISPLAYINFO, int);
LRESULT CALLBACK  TripGraphOldMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  TRIPPLANMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  UNBLOCKEDTMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  UNDOROSTERMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  UNHOOKTRIPSMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  UnpaidTimeFilter(UNPAIDTIMEPassedDataDef *);
   BOOL CALLBACK  USEBLOKSMsgProc(HWND, UINT, WPARAM, LPARAM);
   BOOL CALLBACK  USERNAMEMsgProc(HWND, UINT, WPARAM, LPARAM);
            BOOL  VerifyUserAccessRights(long);
             int  VisualRuncutter(PDISPLAYINFO);
             int  vscroll(HWND, int, int);
   BOOL CALLBACK  WORKRULESMsgProc(HWND, UINT, WPARAM, LPARAM);
            void  WriteExcel(short int, HANDLE, BYTE *, int);
            void  WritePremiums(int);
            BOOL  writeWorkrules(HWND);
